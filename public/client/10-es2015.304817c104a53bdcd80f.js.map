{"version":3,"sources":["webpack:///src/common/uploads/formatted-file-size.pipe.ts","webpack:///src/common/shared/billing/full-plan-name/full-plan-name.component.ts","webpack:///src/common/shared/billing/guards/billing-enabled-guard.service.ts","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/stepper.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/stepper.js","webpack:///src/common/billing/subscriptions/subscription-stepper-state.service.ts","webpack:///src/common/core/services/local-storage.service.ts","webpack:///src/common/billing/subscriptions/paypal-subscriptions.ts","webpack:///src/common/billing/upgrade-page/upgrade-page.component.html","webpack:///src/common/billing/upgrade-page/upgrade-page.component.ts","webpack:///src/common/billing/upgrade-page/billing-plans-resolver.service.ts","webpack:///src/common/billing/upgrade-page/accepted-payments-header/accepted-payments-header.component.html","webpack:///src/common/billing/upgrade-page/accepted-payments-header/accepted-payments-header.component.ts","webpack:///src/common/billing/upgrade-page/plan-features-list/plan-features-list.component.html","webpack:///src/common/billing/upgrade-page/plan-features-list/plan-features-list.component.ts","webpack:///src/common/billing/upgrade-page/upgrade-page-aside/upgrade-page-aside.component.html","webpack:///src/common/billing/upgrade-page/upgrade-page-aside/upgrade-page-aside.component.ts","webpack:///src/common/billing/upgrade-page/order-summary/order-summary.component.html","webpack:///src/common/billing/upgrade-page/order-summary/order-summary.component.ts","webpack:///src/common/billing/credit-card-form/credit-card-form.component.html","webpack:///src/common/billing/credit-card-form/credit-card-form.component.ts","webpack:///src/common/billing/subscriptions/create-subscription-panel/create-subscription-panel.component.html","webpack:///src/common/billing/subscriptions/create-subscription-panel/create-subscription-panel.component.ts","webpack:///src/common/billing/subscriptions/user-subscription-page/user-subscription-page.component.html","webpack:///src/common/billing/subscriptions/user-subscription-page/user-subscription-page.component.ts","webpack:///src/common/billing/upgrade-page/currencies-list-resolver.service.ts","webpack:///src/common/billing/guards/user-subscribed-guard.service.ts","webpack:///src/common/billing/invoices/invoice.service.ts","webpack:///src/common/billing/invoices/invoice-index/invoice-index.component.html","webpack:///src/common/billing/invoices/invoice-index/invoice-index.component.ts","webpack:///src/common/billing/pricing-page/pricing-page.component.ts","webpack:///src/common/billing/pricing-page/pricing-page.component.html","webpack:///src/common/billing/billing-routing.module.ts","webpack:///src/common/billing/guards/redirect-to-upgrade-page.service.ts","webpack:///src/common/billing/plans/select-plan-panel/select-plan-panel.component.html","webpack:///src/common/billing/plans/select-plan-panel/select-plan-panel.component.ts","webpack:///src/common/billing/plans/select-plan-period-panel/select-plan-period-panel.component.html","webpack:///src/common/billing/plans/select-plan-period-panel/select-plan-period-panel.component.ts","webpack:///src/common/billing/guards/user-not-subscribed-guard.service.ts","webpack:///src/common/billing/upgrade-page/contact-widget/contact-widget.component.ts","webpack:///src/common/billing/upgrade-page/contact-widget/contact-widget.component.html","webpack:///src/common/billing/billing.module.ts","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/radio.js","webpack:///src/common/shared/billing/plans.service.ts","webpack:///src/common/shared/billing/full-plan-name/full-plan-name.module.ts","webpack:///src/common/shared/billing/subscriptions.service.ts"],"names":["FormattedFileSizePipe","bytes","precision","isNaN","parseFloat","String","isFinite","FullPlanNameComponent","i18n","this","plan","name","parent","t","BillingEnabledGuard","settings","router","route","state","handle","get","navigate","CdkStep_ng_template_0_Template","rf","ctx","_c0","CdkStepHeader","_elementRef","nativeElement","focus","ɵfac","ɵdir","type","selectors","hostAttrs","CdkStepLabel","template","nextId","STEPPER_GLOBAL_OPTIONS","CdkStep","_stepper","stepperOptions","interacted","_editable","_optional","_completedOverride","_customError","_stepperOptions","_displayDefaultIndicatorType","displayDefaultIndicatorType","_showError","showError","value","c","_getDefaultCompleted","stepControl","valid","_getDefaultError","invalid","selected","reset","_stateChanged","ɵcmp","contentQueries","dirIndex","_t","stepLabel","first","viewQuery","content","inputs","editable","optional","completed","hasError","label","errorMessage","ariaLabel","ariaLabelledby","exportAs","features","ngContentSelectors","decls","vars","encapsulation","changeDetection","CdkStepper","_dir","_changeDetectorRef","_document","_destroyed","Subject","_linear","_selectedIndex","selectionChange","_orientation","_groupId","_steps","index","newIndex","steps","length","Error","_anyControlsInvalidOrPending","toArray","_updateSelectedItemIndex","selectedIndex","undefined","step","indexOf","_keyManager","_stepHeader","withWrap","withVerticalOrientation","change","of","pipe","startWith","_layoutDirection","takeUntil","subscribe","direction","withHorizontalOrientation","updateActiveItem","changes","Math","max","next","complete","min","forEach","i","markForCheck","position","isCurrentStep","_isCurrentStep","_getDefaultIndicatorLogic","_getGuidelineLogic","activeItemIndex","stepsArray","emit","previouslySelectedIndex","selectedStep","previouslySelectedStep","_containsFocus","setActiveItem","event","hasModifier","keyCode","manager","setFirstItemActive","preventDefault","setLastItemActive","onKeydown","slice","some","control","pending","stepperElement","focusedElement","activeElement","contains","linear","outputs","CdkStepperNext","hostVars","hostBindings","_handleClick","CdkStepperPrevious","previous","CdkStepperModule","ɵmod","ɵinj","factory","imports","MatStepHeader_ng_container_3_Template","ctx_r0","iconOverrides","_getIconContext","MatStepHeader_ng_container_4_span_1_Template","ctx_r6","_getDefaultTextForState","MatStepHeader_ng_container_4_mat_icon_2_Template","ctx_r7","MatStepHeader_ng_container_4_Template","ctx_r1","MatStepHeader_ng_container_6_Template","ctx_r2","_templateLabel","MatStepHeader_div_7_Template","ctx_r3","MatStepHeader_div_8_Template","ctx_r4","_intl","optionalLabel","MatStepHeader_div_9_Template","ctx_r5","MatStep_ng_template_0_Template","MatHorizontalStepper_ng_container_1_div_2_Template","MatHorizontalStepper_ng_container_1_Template","_r8","$implicit","select","$event","_onKeydown","step_r2","i_r3","isLast_r4","last","_getFocusIndex","_getStepLabelId","_getIndicatorType","_iconOverrides","disableRipple","_getStepContentId","MatHorizontalStepper_div_3_Template","_r12","_animationDone","step_r9","i_r10","_getAnimationDirection","MatVerticalStepper_div_0_Template","_r6","step_r1","i_r2","isLast_r3","MatStepLabel","ɵMatStepLabel_BaseFactory","MatStepperIntl","ɵprov","token","providedIn","MAT_STEPPER_INTL_PROVIDER","provide","deps","useFactory","parentIntl","MatStepHeader","_focusMonitor","changeDetectorRef","super","_intlSubscription","monitor","unsubscribe","stopMonitoring","focusVia","active","consts","_getHostElement","_stringLabel","directives","styles","matStepperAnimations","horizontalStepTransition","transform","visibility","verticalStepTransition","height","MatStepperIcon","templateRef","MatStep","stepper","_errorStateMatcher","form","isErrorState","useExisting","MatStepper","arguments","animationDone","_icons","distinctUntilChanged","x","y","fromState","toState","ɵMatStepper_BaseFactory","MatHorizontalStepper","labelPosition","ɵMatHorizontalStepper_BaseFactory","data","animation","MatVerticalStepper","dir","elementRef","MatStepperNext","ɵMatStepperNext_BaseFactory","MatStepperPrevious","ɵMatStepperPrevious_BaseFactory","MatStepperModule","providers","SubscriptionStepperState","currentUser","plans","initialPlan$","BehaviorSubject","selectedPlan$","mode","isSubscribed","getSubscription","gateway","children","getChildPlans","radioGroupModel","id","find","filter","parent_id","hidden","LocalStorage","storage","localStorageAvailable","localStorage","key","defaultValue","JSON","parse","getItem","e","stringify","setItem","removeItem","PaypalSubscriptions","http","subscriptions","popupWidth","popupHeight","popupParams","menubar","location","locationbar","toolbar","titlebar","status","scrollbars","width","subscriptionPending","executingAgreement","params","popup","openPaypalPopup","getBaseUrl","Promise","resolve","reject","rejectSubscribe","resolveSubscribe","createPaypalAgreement","response","listenForMessages","plan_id","href","urls","approve","errResponse","rejectSubscriptionPromise","subscription","cancel","delete","start_date","renews_at","then","user","planId","window","addEventListener","origin","executePaypalAgreement","finalize","resolveSubscriptionPromise","url","Object","assign","left","screen","top","newWindow","open","keys","map","join","interval","setInterval","closed","clearInterval","post","agreement_id","message","close","loading$","Steps","Plans","Period","Payment","UpgradePageComponent","toast","paypalSubscriptions","setPlans","hydrateStateFromLocalStorage","storedState","initial","final","initialPlan","p","finalPlan","selectInitialPlan","selectPlanById","changePlan","free","set","remove","replacements","planName","getSelectedOrParentPlanName","activeSubscription","assignCurrent","selectedPlan","nextStep","BillingPlansResolver","all","order","perPage","pagination","catchError","navigateByUrl","mergeMap","AcceptedPaymentsHeaderComponent","el","acceptedCards","getJson","card","getAssetUrl","toLowerCase","PlanFeaturesListComponent","showCheckIcons","dense","UpgradePageAsideComponent","OrderSummaryComponent","CreditCardFormComponent","zone","lazyLoader","theme","created","submitButtonText","showSubmitButton","showOrderSummary","error$","stripeElements","resetForm","initStripe","destroyStripe","error","stripe","createToken","addCardToUser","stripeToken","addCard","loadAsset","Stripe","elements","isDarkMode","selectedTheme$","is_dark","field","create","classes","base","style","color","mount","on","onChange","bind","push","unmount","destroy","run","submitForm","CreateSubscriptionPanelComponent","paypal","selectedIndex$","loading","submitText","disablePaypalTab","startLoading","createOnStripe","getNewSubscriptionPayload","completeSubscription","confirmCardPayment","errors","Default","stopLoading","payment_intent_secret","result","action","onAction","finalizeOnStripe","reference","finalResponse","catch","payload","from","UserSubscriptionPageComponent","modal","activeSubscription$","onGracePeriod","ends_at","split","title","body","ok","afterClosed","confirmed","cancelSubscription","resume","setSubscription","request","share","updateUserAndSubscription","CurrenciesListResolver","valueLists","currencies","toPromise","UserSubscribedGuard","InvoiceService","InvoiceIndexComponent","invoices","dataSource$","userId","invoice","uuid","PricingPageComponent","routes","path","component","canActivate","RedirectToUpgradePage","listener","isLoggedIn","canActivateChild","BillingRoutingModule","forChild","SelectPlanPanelComponent","hasRecommendedPlan","recommended","setTimeout","model$","userSubscribedToPlan","SelectPlanPeriodPanelComponent","showSidebar","baseAmount","getAmountPerDay","amount","ceil","days","interval_count","UserNotSubscribedGuard","ContactWidgetComponent","BillingModule","_c1","enterDuration","_c2","MAT_RADIO_DEFAULT_OPTIONS","nextUniqueId","MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR","MatRadioGroup","multi","MatRadioChange","source","_MatRadioGroupBase","_changeDetector","_value","_name","_selected","_isInitialized","_labelPosition","_disabled","_required","_controlValueAccessorChangeFn","onTouched","_updateRadioButtonNames","v","_markRadiosForCheck","newValue","_updateSelectedRadioFromValue","_checkSelectedRadioButton","checked","_radios","radio","_markForCheck","fn","isDisabled","disabled","required","ɵMatRadioGroup_BaseFactory","MatRadioButton","MatRadioButtonBase","_MatRadioButtonMixinBase","_MatRadioButtonBase","radioGroup","_radioDispatcher","_animationMode","_providerOverride","_uniqueId","_checked","_removeUniqueSelectionListener","listen","newCheckedState","notify","_setDisabled","_color","options","_inputElement","focusOrigin","_touch","stopPropagation","groupValueChanged","_emitChangeEvent","ariaDescribedby","changeDetector","focusMonitor","radioDispatcher","animationMode","providerOverride","tabIndex","_onInputChange","_onInputClick","_r0","inputId","_isRippleDisabled","MatRadioModule","PLANS_BASE_URI","put","ids","FullPlanNameModule","Subscriptions","newPlanId"],"mappings":"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","file":"x","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\r\nimport { prettyBytes } from '../core/utils/pretty-bytes';\r\n\r\n@Pipe({\r\n    name: 'formattedFileSize',\r\n    pure: true,\r\n})\r\nexport class FormattedFileSizePipe implements PipeTransform {\r\n    transform(bytes: number = 0, precision?: number|string): string {\r\n        if (isNaN(parseFloat(String(bytes))) || ! isFinite(bytes)) return '-';\r\n        return prettyBytes(bytes, precision);\r\n    }\r\n}\r\n","import {ChangeDetectionStrategy, Component, Input} from '@angular/core';\r\nimport {Plan} from '@common/core/types/models/Plan';\r\nimport {Translations} from '@common/core/translations/translations.service';\r\nimport {ucFirst} from '@common/core/utils/uc-first';\r\n\r\n@Component({\r\n    selector: 'full-plan-name',\r\n    template: '{{getFullPlanName()}}',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class FullPlanNameComponent {\r\n    @Input() plan: Plan;\r\n\r\n    constructor(private i18n: Translations) {}\r\n\r\n    public getFullPlanName(): string {\r\n        if ( ! this.plan) return;\r\n        let name = this.plan.parent ? this.plan.parent.name : this.plan.name;\r\n        name = ucFirst(this.i18n.t(name));\r\n        name += ' ' + this.i18n.t('Plan');\r\n        if (this.plan.parent) name += ': ' + this.plan.name;\r\n        return name;\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot, CanActivateChild} from '@angular/router';\r\nimport {Settings} from '@common/core/config/settings.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class BillingEnabledGuard implements CanActivate, CanActivateChild {\r\n    constructor(private settings: Settings, private router: Router) {}\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        return this.handle();\r\n    }\r\n\r\n    canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        return this.handle();\r\n    }\r\n\r\n    private handle() {\r\n        if (this.settings.get('billing.integrated') && this.settings.get('billing.enable')) {\r\n            return true;\r\n        }\r\n\r\n        this.router.navigate(['/']);\r\n        return false;\r\n    }\r\n}\r\n","import { FocusKeyManager } from '@angular/cdk/a11y';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { hasModifierKey, SPACE, ENTER, HOME, END } from '@angular/cdk/keycodes';\nimport { DOCUMENT } from '@angular/common';\nimport { Directive, ElementRef, TemplateRef, InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, forwardRef, Optional, ContentChild, ViewChild, Input, EventEmitter, ChangeDetectorRef, ContentChildren, Output, HostListener, NgModule } from '@angular/core';\nimport { Subject, of } from 'rxjs';\nimport { startWith, takeUntil } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\n\nfunction CdkStep_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n} }\nconst _c0 = [\"*\"];\nclass CdkStepHeader {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n    /** Focuses the step header. */\n    focus() {\n        this._elementRef.nativeElement.focus();\n    }\n}\nCdkStepHeader.ɵfac = function CdkStepHeader_Factory(t) { return new (t || CdkStepHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkStepHeader.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkStepHeader, selectors: [[\"\", \"cdkStepHeader\", \"\"]], hostAttrs: [\"role\", \"tab\"] });\nCdkStepHeader.ctorParameters = () => [\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkStepHeader, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkStepHeader]',\n                host: {\n                    'role': 'tab'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass CdkStepLabel {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkStepLabel.ɵfac = function CdkStepLabel_Factory(t) { return new (t || CdkStepLabel)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkStepLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkStepLabel, selectors: [[\"\", \"cdkStepLabel\", \"\"]] });\nCdkStepLabel.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkStepLabel, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkStepLabel]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID for each stepper component. */\nlet nextId = 0;\n/** Change event emitted on selection changes. */\nclass StepperSelectionEvent {\n}\n/** Enum to represent the different states of the steps. */\nconst STEP_STATE = {\n    NUMBER: 'number',\n    EDIT: 'edit',\n    DONE: 'done',\n    ERROR: 'error'\n};\n/** InjectionToken that can be used to specify the global stepper options. */\nconst STEPPER_GLOBAL_OPTIONS = new InjectionToken('STEPPER_GLOBAL_OPTIONS');\n/**\n * InjectionToken that can be used to specify the global stepper options.\n * @deprecated Use `STEPPER_GLOBAL_OPTIONS` instead.\n * @breaking-change 8.0.0.\n */\nconst MAT_STEPPER_GLOBAL_OPTIONS = STEPPER_GLOBAL_OPTIONS;\nclass CdkStep {\n    /** @breaking-change 8.0.0 remove the `?` after `stepperOptions` */\n    constructor(_stepper, stepperOptions) {\n        this._stepper = _stepper;\n        /** Whether user has seen the expanded step content or not. */\n        this.interacted = false;\n        this._editable = true;\n        this._optional = false;\n        this._completedOverride = null;\n        this._customError = null;\n        this._stepperOptions = stepperOptions ? stepperOptions : {};\n        this._displayDefaultIndicatorType = this._stepperOptions.displayDefaultIndicatorType !== false;\n        this._showError = !!this._stepperOptions.showError;\n    }\n    /** Whether the user can return to this step once it has been marked as completed. */\n    get editable() {\n        return this._editable;\n    }\n    set editable(value) {\n        this._editable = coerceBooleanProperty(value);\n    }\n    /** Whether the completion of step is optional. */\n    get optional() {\n        return this._optional;\n    }\n    set optional(value) {\n        this._optional = coerceBooleanProperty(value);\n    }\n    /** Whether step is marked as completed. */\n    get completed() {\n        return this._completedOverride == null ? this._getDefaultCompleted() : this._completedOverride;\n    }\n    set completed(value) {\n        this._completedOverride = coerceBooleanProperty(value);\n    }\n    _getDefaultCompleted() {\n        return this.stepControl ? this.stepControl.valid && this.interacted : this.interacted;\n    }\n    /** Whether step has an error. */\n    get hasError() {\n        return this._customError == null ? this._getDefaultError() : this._customError;\n    }\n    set hasError(value) {\n        this._customError = coerceBooleanProperty(value);\n    }\n    _getDefaultError() {\n        return this.stepControl && this.stepControl.invalid && this.interacted;\n    }\n    /** Selects this step component. */\n    select() {\n        this._stepper.selected = this;\n    }\n    /** Resets the step to its initial state. Note that this includes resetting form data. */\n    reset() {\n        this.interacted = false;\n        if (this._completedOverride != null) {\n            this._completedOverride = false;\n        }\n        if (this._customError != null) {\n            this._customError = false;\n        }\n        if (this.stepControl) {\n            this.stepControl.reset();\n        }\n    }\n    ngOnChanges() {\n        // Since basically all inputs of the MatStep get proxied through the view down to the\n        // underlying MatStepHeader, we have to make sure that change detection runs correctly.\n        this._stepper._stateChanged();\n    }\n}\nCdkStep.ɵfac = function CdkStep_Factory(t) { return new (t || CdkStep)(ɵngcc0.ɵɵdirectiveInject(forwardRef(() => CdkStepper)), ɵngcc0.ɵɵdirectiveInject(STEPPER_GLOBAL_OPTIONS, 8)); };\nCdkStep.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkStep, selectors: [[\"cdk-step\"]], contentQueries: function CdkStep_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkStepLabel, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.stepLabel = _t.first);\n    } }, viewQuery: function CdkStep_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(TemplateRef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.content = _t.first);\n    } }, inputs: { editable: \"editable\", optional: \"optional\", completed: \"completed\", hasError: \"hasError\", stepControl: \"stepControl\", label: \"label\", errorMessage: \"errorMessage\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], state: \"state\" }, exportAs: [\"cdkStep\"], features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function CdkStep_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, CdkStep_ng_template_0_Template, 1, 0, \"ng-template\");\n    } }, encapsulation: 2, changeDetection: 0 });\nCdkStep.ctorParameters = () => [\n    { type: CdkStepper, decorators: [{ type: Inject, args: [forwardRef(() => CdkStepper),] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [STEPPER_GLOBAL_OPTIONS,] }] }\n];\nCdkStep.propDecorators = {\n    stepLabel: [{ type: ContentChild, args: [CdkStepLabel,] }],\n    content: [{ type: ViewChild, args: [TemplateRef, { static: true },] }],\n    stepControl: [{ type: Input }],\n    label: [{ type: Input }],\n    errorMessage: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    state: [{ type: Input }],\n    editable: [{ type: Input }],\n    optional: [{ type: Input }],\n    completed: [{ type: Input }],\n    hasError: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkStep, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-step',\n                exportAs: 'cdkStep',\n                template: '<ng-template><ng-content></ng-content></ng-template>',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: CdkStepper, decorators: [{\n                type: Inject,\n                args: [forwardRef(() => CdkStepper)]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [STEPPER_GLOBAL_OPTIONS]\n            }] }]; }, { editable: [{\n            type: Input\n        }], optional: [{\n            type: Input\n        }], completed: [{\n            type: Input\n        }], hasError: [{\n            type: Input\n        }], stepLabel: [{\n            type: ContentChild,\n            args: [CdkStepLabel]\n        }], content: [{\n            type: ViewChild,\n            args: [TemplateRef, { static: true }]\n        }], stepControl: [{\n            type: Input\n        }], label: [{\n            type: Input\n        }], errorMessage: [{\n            type: Input\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], state: [{\n            type: Input\n        }] }); })();\nclass CdkStepper {\n    constructor(_dir, _changeDetectorRef, \n    // @breaking-change 8.0.0 `_elementRef` and `_document` parameters to become required.\n    _elementRef, _document) {\n        this._dir = _dir;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        this._linear = false;\n        this._selectedIndex = 0;\n        /** Event emitted when the selected step has changed. */\n        this.selectionChange = new EventEmitter();\n        this._orientation = 'horizontal';\n        this._groupId = nextId++;\n        this._document = _document;\n    }\n    /** The list of step components that the stepper is holding. */\n    get steps() {\n        return this._steps;\n    }\n    /** Whether the validity of previous steps should be checked or not. */\n    get linear() {\n        return this._linear;\n    }\n    set linear(value) {\n        this._linear = coerceBooleanProperty(value);\n    }\n    /** The index of the selected step. */\n    get selectedIndex() {\n        return this._selectedIndex;\n    }\n    set selectedIndex(index) {\n        const newIndex = coerceNumberProperty(index);\n        if (this.steps) {\n            // Ensure that the index can't be out of bounds.\n            if (newIndex < 0 || newIndex > this.steps.length - 1) {\n                throw Error('cdkStepper: Cannot assign out-of-bounds value to `selectedIndex`.');\n            }\n            if (this._selectedIndex != newIndex && !this._anyControlsInvalidOrPending(newIndex) &&\n                (newIndex >= this._selectedIndex || this.steps.toArray()[newIndex].editable)) {\n                this._updateSelectedItemIndex(index);\n            }\n        }\n        else {\n            this._selectedIndex = newIndex;\n        }\n    }\n    /** The step that is selected. */\n    get selected() {\n        // @breaking-change 8.0.0 Change return type to `CdkStep | undefined`.\n        return this.steps ? this.steps.toArray()[this.selectedIndex] : undefined;\n    }\n    set selected(step) {\n        this.selectedIndex = this.steps ? this.steps.toArray().indexOf(step) : -1;\n    }\n    ngAfterViewInit() {\n        // Note that while the step headers are content children by default, any components that\n        // extend this one might have them as view children. We initialize the keyboard handling in\n        // AfterViewInit so we're guaranteed for both view and content children to be defined.\n        this._keyManager = new FocusKeyManager(this._stepHeader)\n            .withWrap()\n            .withVerticalOrientation(this._orientation === 'vertical');\n        (this._dir ? this._dir.change : of())\n            .pipe(startWith(this._layoutDirection()), takeUntil(this._destroyed))\n            .subscribe(direction => this._keyManager.withHorizontalOrientation(direction));\n        this._keyManager.updateActiveItem(this._selectedIndex);\n        this.steps.changes.pipe(takeUntil(this._destroyed)).subscribe(() => {\n            if (!this.selected) {\n                this._selectedIndex = Math.max(this._selectedIndex - 1, 0);\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Selects and focuses the next step in list. */\n    next() {\n        this.selectedIndex = Math.min(this._selectedIndex + 1, this.steps.length - 1);\n    }\n    /** Selects and focuses the previous step in list. */\n    previous() {\n        this.selectedIndex = Math.max(this._selectedIndex - 1, 0);\n    }\n    /** Resets the stepper to its initial state. Note that this includes clearing form data. */\n    reset() {\n        this._updateSelectedItemIndex(0);\n        this.steps.forEach(step => step.reset());\n        this._stateChanged();\n    }\n    /** Returns a unique id for each step label element. */\n    _getStepLabelId(i) {\n        return `cdk-step-label-${this._groupId}-${i}`;\n    }\n    /** Returns unique id for each step content element. */\n    _getStepContentId(i) {\n        return `cdk-step-content-${this._groupId}-${i}`;\n    }\n    /** Marks the component to be change detected. */\n    _stateChanged() {\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Returns position state of the step with the given index. */\n    _getAnimationDirection(index) {\n        const position = index - this._selectedIndex;\n        if (position < 0) {\n            return this._layoutDirection() === 'rtl' ? 'next' : 'previous';\n        }\n        else if (position > 0) {\n            return this._layoutDirection() === 'rtl' ? 'previous' : 'next';\n        }\n        return 'current';\n    }\n    /** Returns the type of icon to be displayed. */\n    _getIndicatorType(index, state = STEP_STATE.NUMBER) {\n        const step = this.steps.toArray()[index];\n        const isCurrentStep = this._isCurrentStep(index);\n        return step._displayDefaultIndicatorType ? this._getDefaultIndicatorLogic(step, isCurrentStep) :\n            this._getGuidelineLogic(step, isCurrentStep, state);\n    }\n    _getDefaultIndicatorLogic(step, isCurrentStep) {\n        if (step._showError && step.hasError && !isCurrentStep) {\n            return STEP_STATE.ERROR;\n        }\n        else if (!step.completed || isCurrentStep) {\n            return STEP_STATE.NUMBER;\n        }\n        else {\n            return step.editable ? STEP_STATE.EDIT : STEP_STATE.DONE;\n        }\n    }\n    _getGuidelineLogic(step, isCurrentStep, state = STEP_STATE.NUMBER) {\n        if (step._showError && step.hasError && !isCurrentStep) {\n            return STEP_STATE.ERROR;\n        }\n        else if (step.completed && !isCurrentStep) {\n            return STEP_STATE.DONE;\n        }\n        else if (step.completed && isCurrentStep) {\n            return state;\n        }\n        else if (step.editable && isCurrentStep) {\n            return STEP_STATE.EDIT;\n        }\n        else {\n            return state;\n        }\n    }\n    _isCurrentStep(index) {\n        return this._selectedIndex === index;\n    }\n    /** Returns the index of the currently-focused step header. */\n    _getFocusIndex() {\n        return this._keyManager ? this._keyManager.activeItemIndex : this._selectedIndex;\n    }\n    _updateSelectedItemIndex(newIndex) {\n        const stepsArray = this.steps.toArray();\n        this.selectionChange.emit({\n            selectedIndex: newIndex,\n            previouslySelectedIndex: this._selectedIndex,\n            selectedStep: stepsArray[newIndex],\n            previouslySelectedStep: stepsArray[this._selectedIndex],\n        });\n        // If focus is inside the stepper, move it to the next header, otherwise it may become\n        // lost when the active step content is hidden. We can't be more granular with the check\n        // (e.g. checking whether focus is inside the active step), because we don't have a\n        // reference to the elements that are rendering out the content.\n        this._containsFocus() ? this._keyManager.setActiveItem(newIndex) :\n            this._keyManager.updateActiveItem(newIndex);\n        this._selectedIndex = newIndex;\n        this._stateChanged();\n    }\n    _onKeydown(event) {\n        const hasModifier = hasModifierKey(event);\n        const keyCode = event.keyCode;\n        const manager = this._keyManager;\n        if (manager.activeItemIndex != null && !hasModifier &&\n            (keyCode === SPACE || keyCode === ENTER)) {\n            this.selectedIndex = manager.activeItemIndex;\n            event.preventDefault();\n        }\n        else if (keyCode === HOME) {\n            manager.setFirstItemActive();\n            event.preventDefault();\n        }\n        else if (keyCode === END) {\n            manager.setLastItemActive();\n            event.preventDefault();\n        }\n        else {\n            manager.onKeydown(event);\n        }\n    }\n    _anyControlsInvalidOrPending(index) {\n        const steps = this.steps.toArray();\n        steps[this._selectedIndex].interacted = true;\n        if (this._linear && index >= 0) {\n            return steps.slice(0, index).some(step => {\n                const control = step.stepControl;\n                const isIncomplete = control ? (control.invalid || control.pending || !step.interacted) : !step.completed;\n                return isIncomplete && !step.optional && !step._completedOverride;\n            });\n        }\n        return false;\n    }\n    _layoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Checks whether the stepper contains the focused element. */\n    _containsFocus() {\n        if (!this._document || !this._elementRef) {\n            return false;\n        }\n        const stepperElement = this._elementRef.nativeElement;\n        const focusedElement = this._document.activeElement;\n        return stepperElement === focusedElement || stepperElement.contains(focusedElement);\n    }\n}\nCdkStepper.ɵfac = function CdkStepper_Factory(t) { return new (t || CdkStepper)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nCdkStepper.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkStepper, selectors: [[\"\", \"cdkStepper\", \"\"]], contentQueries: function CdkStepper_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkStep, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkStepHeader, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._steps = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._stepHeader = _t);\n    } }, inputs: { linear: \"linear\", selectedIndex: \"selectedIndex\", selected: \"selected\" }, outputs: { selectionChange: \"selectionChange\" }, exportAs: [\"cdkStepper\"] });\nCdkStepper.ctorParameters = () => [\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\nCdkStepper.propDecorators = {\n    _steps: [{ type: ContentChildren, args: [CdkStep, { descendants: true },] }],\n    _stepHeader: [{ type: ContentChildren, args: [CdkStepHeader, { descendants: true },] }],\n    linear: [{ type: Input }],\n    selectedIndex: [{ type: Input }],\n    selected: [{ type: Input }],\n    selectionChange: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkStepper, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkStepper]',\n                exportAs: 'cdkStepper'\n            }]\n    }], function () { return [{ type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { selectionChange: [{\n            type: Output\n        }], linear: [{\n            type: Input\n        }], selectedIndex: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], _steps: [{\n            type: ContentChildren,\n            args: [CdkStep, { descendants: true }]\n        }], _stepHeader: [{\n            type: ContentChildren,\n            args: [CdkStepHeader, { descendants: true }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Button that moves to the next step in a stepper workflow. */\nclass CdkStepperNext {\n    constructor(_stepper) {\n        this._stepper = _stepper;\n        /** Type of the next button. Defaults to \"submit\" if not specified. */\n        this.type = 'submit';\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _handleClick() {\n        this._stepper.next();\n    }\n}\nCdkStepperNext.ɵfac = function CdkStepperNext_Factory(t) { return new (t || CdkStepperNext)(ɵngcc0.ɵɵdirectiveInject(CdkStepper)); };\nCdkStepperNext.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkStepperNext, selectors: [[\"button\", \"cdkStepperNext\", \"\"]], hostVars: 1, hostBindings: function CdkStepperNext_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function CdkStepperNext_click_HostBindingHandler() { return ctx._handleClick(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"type\", ctx.type);\n    } }, inputs: { type: \"type\" } });\nCdkStepperNext.ctorParameters = () => [\n    { type: CdkStepper }\n];\nCdkStepperNext.propDecorators = {\n    type: [{ type: Input }],\n    _handleClick: [{ type: HostListener, args: ['click',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkStepperNext, [{\n        type: Directive,\n        args: [{\n                selector: 'button[cdkStepperNext]',\n                host: {\n                    '[type]': 'type'\n                }\n            }]\n    }], function () { return [{ type: CdkStepper }]; }, { type: [{\n            type: Input\n        }], _handleClick: [{\n            type: HostListener,\n            args: ['click']\n        }] }); })();\n/** Button that moves to the previous step in a stepper workflow. */\nclass CdkStepperPrevious {\n    constructor(_stepper) {\n        this._stepper = _stepper;\n        /** Type of the previous button. Defaults to \"button\" if not specified. */\n        this.type = 'button';\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _handleClick() {\n        this._stepper.previous();\n    }\n}\nCdkStepperPrevious.ɵfac = function CdkStepperPrevious_Factory(t) { return new (t || CdkStepperPrevious)(ɵngcc0.ɵɵdirectiveInject(CdkStepper)); };\nCdkStepperPrevious.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkStepperPrevious, selectors: [[\"button\", \"cdkStepperPrevious\", \"\"]], hostVars: 1, hostBindings: function CdkStepperPrevious_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function CdkStepperPrevious_click_HostBindingHandler() { return ctx._handleClick(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"type\", ctx.type);\n    } }, inputs: { type: \"type\" } });\nCdkStepperPrevious.ctorParameters = () => [\n    { type: CdkStepper }\n];\nCdkStepperPrevious.propDecorators = {\n    type: [{ type: Input }],\n    _handleClick: [{ type: HostListener, args: ['click',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkStepperPrevious, [{\n        type: Directive,\n        args: [{\n                selector: 'button[cdkStepperPrevious]',\n                host: {\n                    '[type]': 'type'\n                }\n            }]\n    }], function () { return [{ type: CdkStepper }]; }, { type: [{\n            type: Input\n        }], _handleClick: [{\n            type: HostListener,\n            args: ['click']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass CdkStepperModule {\n}\nCdkStepperModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: CdkStepperModule });\nCdkStepperModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function CdkStepperModule_Factory(t) { return new (t || CdkStepperModule)(); }, imports: [[BidiModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkStepperModule, { declarations: function () { return [CdkStep, CdkStepper, CdkStepHeader, CdkStepLabel, CdkStepperNext, CdkStepperPrevious]; }, imports: function () { return [BidiModule]; }, exports: function () { return [CdkStep, CdkStepper, CdkStepHeader, CdkStepLabel, CdkStepperNext, CdkStepperPrevious]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkStepperModule, [{\n        type: NgModule,\n        args: [{\n                imports: [BidiModule],\n                exports: [\n                    CdkStep,\n                    CdkStepper,\n                    CdkStepHeader,\n                    CdkStepLabel,\n                    CdkStepperNext,\n                    CdkStepperPrevious,\n                ],\n                declarations: [\n                    CdkStep,\n                    CdkStepper,\n                    CdkStepHeader,\n                    CdkStepLabel,\n                    CdkStepperNext,\n                    CdkStepperPrevious,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkStep, CdkStepHeader, CdkStepLabel, CdkStepper, CdkStepperModule, CdkStepperNext, CdkStepperPrevious, MAT_STEPPER_GLOBAL_OPTIONS, STEPPER_GLOBAL_OPTIONS, STEP_STATE, StepperSelectionEvent };\n\n//# sourceMappingURL=stepper.js.map","import { PortalModule } from '@angular/cdk/portal';\nimport { CdkStepLabel, CdkStepHeader, CdkStep, STEPPER_GLOBAL_OPTIONS, CdkStepper, CdkStepperNext, CdkStepperPrevious, CdkStepperModule } from '@angular/cdk/stepper';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { Directive, ɵɵdefineInjectable, Injectable, Optional, SkipSelf, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Input, TemplateRef, Inject, forwardRef, ContentChild, EventEmitter, ViewChildren, ContentChildren, Output, NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { ErrorStateMatcher, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Subject } from 'rxjs';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { takeUntil, distinctUntilChanged } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/material/icon';\nimport * as ɵngcc5 from '@angular/cdk/bidi';\n\nfunction MatStepHeader_ng_container_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0, 9);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.iconOverrides[ctx_r0.state])(\"ngTemplateOutletContext\", ctx_r0._getIconContext());\n} }\nfunction MatStepHeader_ng_container_4_span_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r6 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r6._getDefaultTextForState(ctx_r6.state));\n} }\nfunction MatStepHeader_ng_container_4_mat_icon_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-icon\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r7._getDefaultTextForState(ctx_r7.state));\n} }\nfunction MatStepHeader_ng_container_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0, 10);\n    ɵngcc0.ɵɵtemplate(1, MatStepHeader_ng_container_4_span_1_Template, 2, 1, \"span\", 11);\n    ɵngcc0.ɵɵtemplate(2, MatStepHeader_ng_container_4_mat_icon_2_Template, 2, 1, \"mat-icon\", 12);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx_r1.state);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"number\");\n} }\nfunction MatStepHeader_ng_container_6_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0, 13);\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2._templateLabel().template);\n} }\nfunction MatStepHeader_div_7_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 14);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r3.label);\n} }\nfunction MatStepHeader_div_8_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 15);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r4._intl.optionalLabel);\n} }\nfunction MatStepHeader_div_9_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 16);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r5.errorMessage);\n} }\nfunction MatStep_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n} }\nconst _c0 = [\"*\"];\nfunction MatHorizontalStepper_ng_container_1_div_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 6);\n} }\nfunction MatHorizontalStepper_ng_container_1_Template(rf, ctx) { if (rf & 1) {\n    const _r8 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"mat-step-header\", 4);\n    ɵngcc0.ɵɵlistener(\"click\", function MatHorizontalStepper_ng_container_1_Template_mat_step_header_click_1_listener() { const step_r2 = ctx.$implicit; return step_r2.select(); })(\"keydown\", function MatHorizontalStepper_ng_container_1_Template_mat_step_header_keydown_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7._onKeydown($event); });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(2, MatHorizontalStepper_ng_container_1_div_2_Template, 1, 0, \"div\", 5);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const step_r2 = ctx.$implicit;\n    const i_r3 = ctx.index;\n    const isLast_r4 = ctx.last;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"tabIndex\", ctx_r0._getFocusIndex() === i_r3 ? 0 : 0 - 1)(\"id\", ctx_r0._getStepLabelId(i_r3))(\"index\", i_r3)(\"state\", ctx_r0._getIndicatorType(i_r3, step_r2.state))(\"label\", step_r2.stepLabel || step_r2.label)(\"selected\", ctx_r0.selectedIndex === i_r3)(\"active\", step_r2.completed || ctx_r0.selectedIndex === i_r3 || !ctx_r0.linear)(\"optional\", step_r2.optional)(\"errorMessage\", step_r2.errorMessage)(\"iconOverrides\", ctx_r0._iconOverrides)(\"disableRipple\", ctx_r0.disableRipple);\n    ɵngcc0.ɵɵattribute(\"aria-posinset\", i_r3 + 1)(\"aria-setsize\", ctx_r0.steps.length)(\"aria-controls\", ctx_r0._getStepContentId(i_r3))(\"aria-selected\", ctx_r0.selectedIndex == i_r3)(\"aria-label\", step_r2.ariaLabel || null)(\"aria-labelledby\", !step_r2.ariaLabel && step_r2.ariaLabelledby ? step_r2.ariaLabelledby : null);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !isLast_r4);\n} }\nfunction MatHorizontalStepper_div_3_Template(rf, ctx) { if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 7);\n    ɵngcc0.ɵɵlistener(\"@stepTransition.done\", function MatHorizontalStepper_div_3_Template_div_animation_stepTransition_done_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11._animationDone.next($event); });\n    ɵngcc0.ɵɵelementContainer(1, 8);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const step_r9 = ctx.$implicit;\n    const i_r10 = ctx.index;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@stepTransition\", ctx_r1._getAnimationDirection(i_r10))(\"id\", ctx_r1._getStepContentId(i_r10));\n    ɵngcc0.ɵɵattribute(\"tabindex\", ctx_r1.selectedIndex === i_r10 ? 0 : null)(\"aria-labelledby\", ctx_r1._getStepLabelId(i_r10))(\"aria-expanded\", ctx_r1.selectedIndex === i_r10);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", step_r9.content);\n} }\nfunction MatVerticalStepper_div_0_Template(rf, ctx) { if (rf & 1) {\n    const _r6 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵelementStart(1, \"mat-step-header\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function MatVerticalStepper_div_0_Template_mat_step_header_click_1_listener() { const step_r1 = ctx.$implicit; return step_r1.select(); })(\"keydown\", function MatVerticalStepper_div_0_Template_mat_step_header_keydown_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r6); const ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5._onKeydown($event); });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(2, \"div\", 3);\n    ɵngcc0.ɵɵelementStart(3, \"div\", 4);\n    ɵngcc0.ɵɵlistener(\"@stepTransition.done\", function MatVerticalStepper_div_0_Template_div_animation_stepTransition_done_3_listener($event) { ɵngcc0.ɵɵrestoreView(_r6); const ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7._animationDone.next($event); });\n    ɵngcc0.ɵɵelementStart(4, \"div\", 5);\n    ɵngcc0.ɵɵelementContainer(5, 6);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const step_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    const isLast_r3 = ctx.last;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"tabIndex\", ctx_r0._getFocusIndex() == i_r2 ? 0 : 0 - 1)(\"id\", ctx_r0._getStepLabelId(i_r2))(\"index\", i_r2)(\"state\", ctx_r0._getIndicatorType(i_r2, step_r1.state))(\"label\", step_r1.stepLabel || step_r1.label)(\"selected\", ctx_r0.selectedIndex === i_r2)(\"active\", step_r1.completed || ctx_r0.selectedIndex === i_r2 || !ctx_r0.linear)(\"optional\", step_r1.optional)(\"errorMessage\", step_r1.errorMessage)(\"iconOverrides\", ctx_r0._iconOverrides)(\"disableRipple\", ctx_r0.disableRipple);\n    ɵngcc0.ɵɵattribute(\"aria-posinset\", i_r2 + 1)(\"aria-setsize\", ctx_r0.steps.length)(\"aria-controls\", ctx_r0._getStepContentId(i_r2))(\"aria-selected\", ctx_r0.selectedIndex === i_r2)(\"aria-label\", step_r1.ariaLabel || null)(\"aria-labelledby\", !step_r1.ariaLabel && step_r1.ariaLabelledby ? step_r1.ariaLabelledby : null);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"mat-stepper-vertical-line\", !isLast_r3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"@stepTransition\", ctx_r0._getAnimationDirection(i_r2))(\"id\", ctx_r0._getStepContentId(i_r2));\n    ɵngcc0.ɵɵattribute(\"tabindex\", ctx_r0.selectedIndex === i_r2 ? 0 : null)(\"aria-labelledby\", ctx_r0._getStepLabelId(i_r2))(\"aria-expanded\", ctx_r0.selectedIndex === i_r2);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", step_r1.content);\n} }\nclass MatStepLabel extends CdkStepLabel {\n}\nMatStepLabel.ɵfac = function MatStepLabel_Factory(t) { return ɵMatStepLabel_BaseFactory(t || MatStepLabel); };\nMatStepLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatStepLabel, selectors: [[\"\", \"matStepLabel\", \"\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatStepLabel_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatStepLabel);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatStepLabel, [{\n        type: Directive,\n        args: [{\n                selector: '[matStepLabel]'\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Stepper data that is required for internationalization. */\nclass MatStepperIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n        /** Label that is rendered below optional steps. */\n        this.optionalLabel = 'Optional';\n    }\n}\nMatStepperIntl.ɵfac = function MatStepperIntl_Factory(t) { return new (t || MatStepperIntl)(); };\nMatStepperIntl.ɵprov = ɵɵdefineInjectable({ factory: function MatStepperIntl_Factory() { return new MatStepperIntl(); }, token: MatStepperIntl, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatStepperIntl, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\n/** @docs-private */\nfunction MAT_STEPPER_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatStepperIntl();\n}\n/** @docs-private */\nconst MAT_STEPPER_INTL_PROVIDER = {\n    provide: MatStepperIntl,\n    deps: [[new Optional(), new SkipSelf(), MatStepperIntl]],\n    useFactory: MAT_STEPPER_INTL_PROVIDER_FACTORY\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatStepHeader extends CdkStepHeader {\n    constructor(_intl, _focusMonitor, _elementRef, changeDetectorRef) {\n        super(_elementRef);\n        this._intl = _intl;\n        this._focusMonitor = _focusMonitor;\n        this._intlSubscription = _intl.changes.subscribe(() => changeDetectorRef.markForCheck());\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._elementRef, true);\n    }\n    ngOnDestroy() {\n        this._intlSubscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /** Focuses the step header. */\n    focus() {\n        this._focusMonitor.focusVia(this._elementRef, 'program');\n    }\n    /** Returns string label of given step if it is a text label. */\n    _stringLabel() {\n        return this.label instanceof MatStepLabel ? null : this.label;\n    }\n    /** Returns MatStepLabel if the label of given step is a template label. */\n    _templateLabel() {\n        return this.label instanceof MatStepLabel ? this.label : null;\n    }\n    /** Returns the host HTML element. */\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    /** Template context variables that are exposed to the `matStepperIcon` instances. */\n    _getIconContext() {\n        return {\n            index: this.index,\n            active: this.active,\n            optional: this.optional\n        };\n    }\n    _getDefaultTextForState(state) {\n        if (state == 'number') {\n            return `${this.index + 1}`;\n        }\n        if (state == 'edit') {\n            return 'create';\n        }\n        if (state == 'error') {\n            return 'warning';\n        }\n        return state;\n    }\n}\nMatStepHeader.ɵfac = function MatStepHeader_Factory(t) { return new (t || MatStepHeader)(ɵngcc0.ɵɵdirectiveInject(MatStepperIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatStepHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatStepHeader, selectors: [[\"mat-step-header\"]], hostAttrs: [\"role\", \"tab\", 1, \"mat-step-header\", \"mat-focus-indicator\"], inputs: { state: \"state\", label: \"label\", errorMessage: \"errorMessage\", iconOverrides: \"iconOverrides\", index: \"index\", selected: \"selected\", active: \"active\", optional: \"optional\", disableRipple: \"disableRipple\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 10, vars: 19, consts: [[\"matRipple\", \"\", 1, \"mat-step-header-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mat-step-icon-content\", 3, \"ngSwitch\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\", 4, \"ngSwitchCase\"], [3, \"ngSwitch\", 4, \"ngSwitchDefault\"], [1, \"mat-step-label\"], [3, \"ngTemplateOutlet\", 4, \"ngIf\"], [\"class\", \"mat-step-text-label\", 4, \"ngIf\"], [\"class\", \"mat-step-optional\", 4, \"ngIf\"], [\"class\", \"mat-step-sub-label-error\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [4, \"ngSwitchDefault\"], [3, \"ngTemplateOutlet\"], [1, \"mat-step-text-label\"], [1, \"mat-step-optional\"], [1, \"mat-step-sub-label-error\"]], template: function MatStepHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\");\n        ɵngcc0.ɵɵelementStart(2, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(3, MatStepHeader_ng_container_3_Template, 1, 2, \"ng-container\", 2);\n        ɵngcc0.ɵɵtemplate(4, MatStepHeader_ng_container_4_Template, 3, 2, \"ng-container\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(5, \"div\", 4);\n        ɵngcc0.ɵɵtemplate(6, MatStepHeader_ng_container_6_Template, 1, 1, \"ng-container\", 5);\n        ɵngcc0.ɵɵtemplate(7, MatStepHeader_div_7_Template, 2, 1, \"div\", 6);\n        ɵngcc0.ɵɵtemplate(8, MatStepHeader_div_8_Template, 2, 1, \"div\", 7);\n        ɵngcc0.ɵɵtemplate(9, MatStepHeader_div_9_Template, 2, 1, \"div\", 8);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx.disableRipple);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassMapInterpolate1(\"mat-step-icon-state-\", ctx.state, \" mat-step-icon\");\n        ɵngcc0.ɵɵclassProp(\"mat-step-icon-selected\", ctx.selected);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", !!(ctx.iconOverrides && ctx.iconOverrides[ctx.state]));\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-step-label-active\", ctx.active)(\"mat-step-label-selected\", ctx.selected)(\"mat-step-label-error\", ctx.state == \"error\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._templateLabel());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._stringLabel());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.optional && ctx.state != \"error\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.state == \"error\");\n    } }, directives: [ɵngcc2.MatRipple, ɵngcc3.NgSwitch, ɵngcc3.NgSwitchCase, ɵngcc3.NgSwitchDefault, ɵngcc3.NgIf, ɵngcc3.NgTemplateOutlet, ɵngcc4.MatIcon], styles: [\".mat-step-header{overflow:hidden;outline:none;cursor:pointer;position:relative;box-sizing:content-box;-webkit-tap-highlight-color:transparent}.mat-step-optional,.mat-step-sub-label-error{font-size:12px}.mat-step-icon{border-radius:50%;height:24px;width:24px;flex-shrink:0;position:relative}.mat-step-icon-content,.mat-step-icon .mat-icon{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}.mat-step-icon .mat-icon{font-size:16px;height:16px;width:16px}.mat-step-icon-state-error .mat-icon{font-size:24px;height:24px;width:24px}.mat-step-label{display:inline-block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;min-width:50px;vertical-align:middle}.mat-step-text-label{text-overflow:ellipsis;overflow:hidden}.mat-step-header .mat-step-header-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatStepHeader.ctorParameters = () => [\n    { type: MatStepperIntl },\n    { type: FocusMonitor },\n    { type: ElementRef },\n    { type: ChangeDetectorRef }\n];\nMatStepHeader.propDecorators = {\n    state: [{ type: Input }],\n    label: [{ type: Input }],\n    errorMessage: [{ type: Input }],\n    iconOverrides: [{ type: Input }],\n    index: [{ type: Input }],\n    selected: [{ type: Input }],\n    active: [{ type: Input }],\n    optional: [{ type: Input }],\n    disableRipple: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatStepHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-step-header',\n                template: \"<div class=\\\"mat-step-header-ripple\\\" matRipple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disableRipple\\\"></div>\\n\\n<div class=\\\"mat-step-icon-state-{{state}} mat-step-icon\\\" [class.mat-step-icon-selected]=\\\"selected\\\">\\n  <div class=\\\"mat-step-icon-content\\\" [ngSwitch]=\\\"!!(iconOverrides && iconOverrides[state])\\\">\\n    <ng-container\\n      *ngSwitchCase=\\\"true\\\"\\n      [ngTemplateOutlet]=\\\"iconOverrides[state]\\\"\\n      [ngTemplateOutletContext]=\\\"_getIconContext()\\\"></ng-container>\\n    <ng-container *ngSwitchDefault [ngSwitch]=\\\"state\\\">\\n      <span *ngSwitchCase=\\\"'number'\\\">{{_getDefaultTextForState(state)}}</span>\\n      <mat-icon *ngSwitchDefault>{{_getDefaultTextForState(state)}}</mat-icon>\\n    </ng-container>\\n  </div>\\n</div>\\n<div class=\\\"mat-step-label\\\"\\n     [class.mat-step-label-active]=\\\"active\\\"\\n     [class.mat-step-label-selected]=\\\"selected\\\"\\n     [class.mat-step-label-error]=\\\"state == 'error'\\\">\\n  <!-- If there is a label template, use it. -->\\n  <ng-container *ngIf=\\\"_templateLabel()\\\" [ngTemplateOutlet]=\\\"_templateLabel()!.template\\\">\\n  </ng-container>\\n  <!-- If there is no label template, fall back to the text label. -->\\n  <div class=\\\"mat-step-text-label\\\" *ngIf=\\\"_stringLabel()\\\">{{label}}</div>\\n\\n  <div class=\\\"mat-step-optional\\\" *ngIf=\\\"optional && state != 'error'\\\">{{_intl.optionalLabel}}</div>\\n  <div class=\\\"mat-step-sub-label-error\\\" *ngIf=\\\"state == 'error'\\\">{{errorMessage}}</div>\\n</div>\\n\\n\",\n                host: {\n                    'class': 'mat-step-header mat-focus-indicator',\n                    'role': 'tab'\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-step-header{overflow:hidden;outline:none;cursor:pointer;position:relative;box-sizing:content-box;-webkit-tap-highlight-color:transparent}.mat-step-optional,.mat-step-sub-label-error{font-size:12px}.mat-step-icon{border-radius:50%;height:24px;width:24px;flex-shrink:0;position:relative}.mat-step-icon-content,.mat-step-icon .mat-icon{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}.mat-step-icon .mat-icon{font-size:16px;height:16px;width:16px}.mat-step-icon-state-error .mat-icon{font-size:24px;height:24px;width:24px}.mat-step-label{display:inline-block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;min-width:50px;vertical-align:middle}.mat-step-text-label{text-overflow:ellipsis;overflow:hidden}.mat-step-header .mat-step-header-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"]\n            }]\n    }], function () { return [{ type: MatStepperIntl }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }]; }, { state: [{\n            type: Input\n        }], label: [{\n            type: Input\n        }], errorMessage: [{\n            type: Input\n        }], iconOverrides: [{\n            type: Input\n        }], index: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], active: [{\n            type: Input\n        }], optional: [{\n            type: Input\n        }], disableRipple: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material steppers.\n * @docs-private\n */\nconst matStepperAnimations = {\n    /** Animation that transitions the step along the X axis in a horizontal stepper. */\n    horizontalStepTransition: trigger('stepTransition', [\n        state('previous', style({ transform: 'translate3d(-100%, 0, 0)', visibility: 'hidden' })),\n        state('current', style({ transform: 'none', visibility: 'visible' })),\n        state('next', style({ transform: 'translate3d(100%, 0, 0)', visibility: 'hidden' })),\n        transition('* => *', animate('500ms cubic-bezier(0.35, 0, 0.25, 1)'))\n    ]),\n    /** Animation that transitions the step along the Y axis in a vertical stepper. */\n    verticalStepTransition: trigger('stepTransition', [\n        state('previous', style({ height: '0px', visibility: 'hidden' })),\n        state('next', style({ height: '0px', visibility: 'hidden' })),\n        state('current', style({ height: '*', visibility: 'visible' })),\n        transition('* <=> current', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)'))\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Template to be used to override the icons inside the step header.\n */\nclass MatStepperIcon {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nMatStepperIcon.ɵfac = function MatStepperIcon_Factory(t) { return new (t || MatStepperIcon)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nMatStepperIcon.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatStepperIcon, selectors: [[\"ng-template\", \"matStepperIcon\", \"\"]], inputs: { name: [\"matStepperIcon\", \"name\"] } });\nMatStepperIcon.ctorParameters = () => [\n    { type: TemplateRef }\n];\nMatStepperIcon.propDecorators = {\n    name: [{ type: Input, args: ['matStepperIcon',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatStepperIcon, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[matStepperIcon]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, { name: [{\n            type: Input,\n            args: ['matStepperIcon']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatStep extends CdkStep {\n    /** @breaking-change 8.0.0 remove the `?` after `stepperOptions` */\n    constructor(stepper, _errorStateMatcher, stepperOptions) {\n        super(stepper, stepperOptions);\n        this._errorStateMatcher = _errorStateMatcher;\n    }\n    /** Custom error state matcher that additionally checks for validity of interacted form. */\n    isErrorState(control, form) {\n        const originalErrorState = this._errorStateMatcher.isErrorState(control, form);\n        // Custom error state checks for the validity of form that is not submitted or touched\n        // since user can trigger a form change by calling for another step without directly\n        // interacting with the current form.\n        const customErrorState = !!(control && control.invalid && this.interacted);\n        return originalErrorState || customErrorState;\n    }\n}\nMatStep.ɵfac = function MatStep_Factory(t) { return new (t || MatStep)(ɵngcc0.ɵɵdirectiveInject(forwardRef(() => MatStepper)), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ErrorStateMatcher, 4), ɵngcc0.ɵɵdirectiveInject(STEPPER_GLOBAL_OPTIONS, 8)); };\nMatStep.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatStep, selectors: [[\"mat-step\"]], contentQueries: function MatStep_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatStepLabel, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.stepLabel = _t.first);\n    } }, exportAs: [\"matStep\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: ErrorStateMatcher, useExisting: MatStep },\n            { provide: CdkStep, useExisting: MatStep },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatStep_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatStep_ng_template_0_Template, 1, 0, \"ng-template\");\n    } }, encapsulation: 2, changeDetection: 0 });\nMatStep.ctorParameters = () => [\n    { type: MatStepper, decorators: [{ type: Inject, args: [forwardRef(() => MatStepper),] }] },\n    { type: ErrorStateMatcher, decorators: [{ type: SkipSelf }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [STEPPER_GLOBAL_OPTIONS,] }] }\n];\nMatStep.propDecorators = {\n    stepLabel: [{ type: ContentChild, args: [MatStepLabel,] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatStep, [{\n        type: Component,\n        args: [{\n                selector: 'mat-step',\n                template: \"<ng-template><ng-content></ng-content></ng-template>\\n\",\n                providers: [\n                    { provide: ErrorStateMatcher, useExisting: MatStep },\n                    { provide: CdkStep, useExisting: MatStep },\n                ],\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matStep',\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: MatStepper, decorators: [{\n                type: Inject,\n                args: [forwardRef(() => MatStepper)]\n            }] }, { type: ɵngcc2.ErrorStateMatcher, decorators: [{\n                type: SkipSelf\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [STEPPER_GLOBAL_OPTIONS]\n            }] }]; }, { stepLabel: [{\n            type: ContentChild,\n            args: [MatStepLabel]\n        }] }); })();\nclass MatStepper extends CdkStepper {\n    constructor() {\n        super(...arguments);\n        /** Event emitted when the current step is done transitioning in. */\n        this.animationDone = new EventEmitter();\n        /** Consumer-specified template-refs to be used to override the header icons. */\n        this._iconOverrides = {};\n        /** Stream of animation `done` events when the body expands/collapses. */\n        this._animationDone = new Subject();\n    }\n    ngAfterContentInit() {\n        this._icons.forEach(({ name, templateRef }) => this._iconOverrides[name] = templateRef);\n        // Mark the component for change detection whenever the content children query changes\n        this._steps.changes.pipe(takeUntil(this._destroyed)).subscribe(() => {\n            this._stateChanged();\n        });\n        this._animationDone.pipe(\n        // This needs a `distinctUntilChanged` in order to avoid emitting the same event twice due\n        // to a bug in animations where the `.done` callback gets invoked twice on some browsers.\n        // See https://github.com/angular/angular/issues/24084\n        distinctUntilChanged((x, y) => x.fromState === y.fromState && x.toState === y.toState), takeUntil(this._destroyed)).subscribe(event => {\n            if (event.toState === 'current') {\n                this.animationDone.emit();\n            }\n        });\n    }\n}\nMatStepper.ɵfac = function MatStepper_Factory(t) { return ɵMatStepper_BaseFactory(t || MatStepper); };\nMatStepper.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatStepper, selectors: [[\"\", \"matStepper\", \"\"]], contentQueries: function MatStepper_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatStep, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatStepperIcon, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._steps = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._icons = _t);\n    } }, viewQuery: function MatStepper_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatStepHeader, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._stepHeader = _t);\n    } }, inputs: { disableRipple: \"disableRipple\" }, outputs: { animationDone: \"animationDone\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkStepper, useExisting: MatStepper }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatStepper.propDecorators = {\n    _stepHeader: [{ type: ViewChildren, args: [MatStepHeader,] }],\n    _steps: [{ type: ContentChildren, args: [MatStep, { descendants: true },] }],\n    _icons: [{ type: ContentChildren, args: [MatStepperIcon, { descendants: true },] }],\n    animationDone: [{ type: Output }],\n    disableRipple: [{ type: Input }]\n};\nconst ɵMatStepper_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatStepper);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatStepper, [{\n        type: Directive,\n        args: [{ selector: '[matStepper]', providers: [{ provide: CdkStepper, useExisting: MatStepper }] }]\n    }], null, { animationDone: [{\n            type: Output\n        }], _stepHeader: [{\n            type: ViewChildren,\n            args: [MatStepHeader]\n        }], _steps: [{\n            type: ContentChildren,\n            args: [MatStep, { descendants: true }]\n        }], _icons: [{\n            type: ContentChildren,\n            args: [MatStepperIcon, { descendants: true }]\n        }], disableRipple: [{\n            type: Input\n        }] }); })();\nclass MatHorizontalStepper extends MatStepper {\n    constructor() {\n        super(...arguments);\n        /** Whether the label should display in bottom or end position. */\n        this.labelPosition = 'end';\n    }\n}\nMatHorizontalStepper.ɵfac = function MatHorizontalStepper_Factory(t) { return ɵMatHorizontalStepper_BaseFactory(t || MatHorizontalStepper); };\nMatHorizontalStepper.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatHorizontalStepper, selectors: [[\"mat-horizontal-stepper\"]], hostAttrs: [\"aria-orientation\", \"horizontal\", \"role\", \"tablist\", 1, \"mat-stepper-horizontal\"], hostVars: 4, hostBindings: function MatHorizontalStepper_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-stepper-label-position-end\", ctx.labelPosition == \"end\")(\"mat-stepper-label-position-bottom\", ctx.labelPosition == \"bottom\");\n    } }, inputs: { selectedIndex: \"selectedIndex\", labelPosition: \"labelPosition\" }, exportAs: [\"matHorizontalStepper\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MatStepper, useExisting: MatHorizontalStepper },\n            { provide: CdkStepper, useExisting: MatHorizontalStepper }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 4, vars: 2, consts: [[1, \"mat-horizontal-stepper-header-container\"], [4, \"ngFor\", \"ngForOf\"], [1, \"mat-horizontal-content-container\"], [\"class\", \"mat-horizontal-stepper-content\", \"role\", \"tabpanel\", 3, \"id\", 4, \"ngFor\", \"ngForOf\"], [1, \"mat-horizontal-stepper-header\", 3, \"tabIndex\", \"id\", \"index\", \"state\", \"label\", \"selected\", \"active\", \"optional\", \"errorMessage\", \"iconOverrides\", \"disableRipple\", \"click\", \"keydown\"], [\"class\", \"mat-stepper-horizontal-line\", 4, \"ngIf\"], [1, \"mat-stepper-horizontal-line\"], [\"role\", \"tabpanel\", 1, \"mat-horizontal-stepper-content\", 3, \"id\"], [3, \"ngTemplateOutlet\"]], template: function MatHorizontalStepper_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵtemplate(1, MatHorizontalStepper_ng_container_1_Template, 3, 18, \"ng-container\", 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵtemplate(3, MatHorizontalStepper_div_3_Template, 2, 6, \"div\", 3);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.steps);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.steps);\n    } }, directives: [ɵngcc3.NgForOf, MatStepHeader, ɵngcc3.NgIf, ɵngcc3.NgTemplateOutlet], styles: [\".mat-stepper-vertical,.mat-stepper-horizontal{display:block}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;height:24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-content{outline:0}.mat-horizontal-stepper-content[aria-expanded=false]{height:0;overflow:hidden}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}.mat-vertical-content-container{margin-left:36px;border:0;position:relative}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;left:0;border-left-width:1px;border-left-style:solid}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0}.mat-vertical-content{padding:0 24px 24px 24px}.mat-step:last-child .mat-vertical-content-container{border:none}\\n\"], encapsulation: 2, data: { animation: [matStepperAnimations.horizontalStepTransition] }, changeDetection: 0 });\nMatHorizontalStepper.propDecorators = {\n    labelPosition: [{ type: Input }]\n};\nconst ɵMatHorizontalStepper_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHorizontalStepper);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHorizontalStepper, [{\n        type: Component,\n        args: [{\n                selector: 'mat-horizontal-stepper',\n                exportAs: 'matHorizontalStepper',\n                template: \"<div class=\\\"mat-horizontal-stepper-header-container\\\">\\n  <ng-container *ngFor=\\\"let step of steps; let i = index; let isLast = last\\\">\\n    <mat-step-header class=\\\"mat-horizontal-stepper-header\\\"\\n                     (click)=\\\"step.select()\\\"\\n                     (keydown)=\\\"_onKeydown($event)\\\"\\n                     [tabIndex]=\\\"_getFocusIndex() === i ? 0 : -1\\\"\\n                     [id]=\\\"_getStepLabelId(i)\\\"\\n                     [attr.aria-posinset]=\\\"i + 1\\\"\\n                     [attr.aria-setsize]=\\\"steps.length\\\"\\n                     [attr.aria-controls]=\\\"_getStepContentId(i)\\\"\\n                     [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n                     [attr.aria-label]=\\\"step.ariaLabel || null\\\"\\n                     [attr.aria-labelledby]=\\\"(!step.ariaLabel && step.ariaLabelledby) ? step.ariaLabelledby : null\\\"\\n                     [index]=\\\"i\\\"\\n                     [state]=\\\"_getIndicatorType(i, step.state)\\\"\\n                     [label]=\\\"step.stepLabel || step.label\\\"\\n                     [selected]=\\\"selectedIndex === i\\\"\\n                     [active]=\\\"step.completed || selectedIndex === i || !linear\\\"\\n                     [optional]=\\\"step.optional\\\"\\n                     [errorMessage]=\\\"step.errorMessage\\\"\\n                     [iconOverrides]=\\\"_iconOverrides\\\"\\n                     [disableRipple]=\\\"disableRipple\\\">\\n    </mat-step-header>\\n    <div *ngIf=\\\"!isLast\\\" class=\\\"mat-stepper-horizontal-line\\\"></div>\\n  </ng-container>\\n</div>\\n\\n<div class=\\\"mat-horizontal-content-container\\\">\\n  <div *ngFor=\\\"let step of steps; let i = index\\\"\\n       [attr.tabindex]=\\\"selectedIndex === i ? 0 : null\\\"\\n       class=\\\"mat-horizontal-stepper-content\\\" role=\\\"tabpanel\\\"\\n       [@stepTransition]=\\\"_getAnimationDirection(i)\\\"\\n       (@stepTransition.done)=\\\"_animationDone.next($event)\\\"\\n       [id]=\\\"_getStepContentId(i)\\\"\\n       [attr.aria-labelledby]=\\\"_getStepLabelId(i)\\\"\\n       [attr.aria-expanded]=\\\"selectedIndex === i\\\">\\n    <ng-container [ngTemplateOutlet]=\\\"step.content\\\"></ng-container>\\n  </div>\\n</div>\\n\",\n                inputs: ['selectedIndex'],\n                host: {\n                    'class': 'mat-stepper-horizontal',\n                    '[class.mat-stepper-label-position-end]': 'labelPosition == \"end\"',\n                    '[class.mat-stepper-label-position-bottom]': 'labelPosition == \"bottom\"',\n                    'aria-orientation': 'horizontal',\n                    'role': 'tablist'\n                },\n                animations: [matStepperAnimations.horizontalStepTransition],\n                providers: [\n                    { provide: MatStepper, useExisting: MatHorizontalStepper },\n                    { provide: CdkStepper, useExisting: MatHorizontalStepper }\n                ],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-stepper-vertical,.mat-stepper-horizontal{display:block}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;height:24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-content{outline:0}.mat-horizontal-stepper-content[aria-expanded=false]{height:0;overflow:hidden}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}.mat-vertical-content-container{margin-left:36px;border:0;position:relative}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;left:0;border-left-width:1px;border-left-style:solid}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0}.mat-vertical-content{padding:0 24px 24px 24px}.mat-step:last-child .mat-vertical-content-container{border:none}\\n\"]\n            }]\n    }], null, { labelPosition: [{\n            type: Input\n        }] }); })();\nclass MatVerticalStepper extends MatStepper {\n    constructor(dir, changeDetectorRef, \n    // @breaking-change 8.0.0 `elementRef` and `_document` parameters to become required.\n    elementRef, _document) {\n        super(dir, changeDetectorRef, elementRef, _document);\n        this._orientation = 'vertical';\n    }\n}\nMatVerticalStepper.ɵfac = function MatVerticalStepper_Factory(t) { return new (t || MatVerticalStepper)(ɵngcc0.ɵɵdirectiveInject(ɵngcc5.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nMatVerticalStepper.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatVerticalStepper, selectors: [[\"mat-vertical-stepper\"]], hostAttrs: [\"aria-orientation\", \"vertical\", \"role\", \"tablist\", 1, \"mat-stepper-vertical\"], inputs: { selectedIndex: \"selectedIndex\" }, exportAs: [\"matVerticalStepper\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MatStepper, useExisting: MatVerticalStepper },\n            { provide: CdkStepper, useExisting: MatVerticalStepper }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 1, consts: [[\"class\", \"mat-step\", 4, \"ngFor\", \"ngForOf\"], [1, \"mat-step\"], [1, \"mat-vertical-stepper-header\", 3, \"tabIndex\", \"id\", \"index\", \"state\", \"label\", \"selected\", \"active\", \"optional\", \"errorMessage\", \"iconOverrides\", \"disableRipple\", \"click\", \"keydown\"], [1, \"mat-vertical-content-container\"], [\"role\", \"tabpanel\", 1, \"mat-vertical-stepper-content\", 3, \"id\"], [1, \"mat-vertical-content\"], [3, \"ngTemplateOutlet\"]], template: function MatVerticalStepper_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, MatVerticalStepper_div_0_Template, 6, 25, \"div\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.steps);\n    } }, directives: [ɵngcc3.NgForOf, MatStepHeader, ɵngcc3.NgTemplateOutlet], styles: [\".mat-stepper-vertical,.mat-stepper-horizontal{display:block}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;height:24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-content{outline:0}.mat-horizontal-stepper-content[aria-expanded=false]{height:0;overflow:hidden}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}.mat-vertical-content-container{margin-left:36px;border:0;position:relative}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;left:0;border-left-width:1px;border-left-style:solid}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0}.mat-vertical-content{padding:0 24px 24px 24px}.mat-step:last-child .mat-vertical-content-container{border:none}\\n\"], encapsulation: 2, data: { animation: [matStepperAnimations.verticalStepTransition] }, changeDetection: 0 });\nMatVerticalStepper.ctorParameters = () => [\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatVerticalStepper, [{\n        type: Component,\n        args: [{\n                selector: 'mat-vertical-stepper',\n                exportAs: 'matVerticalStepper',\n                template: \"<div class=\\\"mat-step\\\" *ngFor=\\\"let step of steps; let i = index; let isLast = last\\\">\\n  <mat-step-header class=\\\"mat-vertical-stepper-header\\\"\\n                   (click)=\\\"step.select()\\\"\\n                   (keydown)=\\\"_onKeydown($event)\\\"\\n                   [tabIndex]=\\\"_getFocusIndex() == i ? 0 : -1\\\"\\n                   [id]=\\\"_getStepLabelId(i)\\\"\\n                   [attr.aria-posinset]=\\\"i + 1\\\"\\n                   [attr.aria-setsize]=\\\"steps.length\\\"\\n                   [attr.aria-controls]=\\\"_getStepContentId(i)\\\"\\n                   [attr.aria-selected]=\\\"selectedIndex === i\\\"\\n                   [attr.aria-label]=\\\"step.ariaLabel || null\\\"\\n                   [attr.aria-labelledby]=\\\"(!step.ariaLabel && step.ariaLabelledby) ? step.ariaLabelledby : null\\\"\\n                   [index]=\\\"i\\\"\\n                   [state]=\\\"_getIndicatorType(i, step.state)\\\"\\n                   [label]=\\\"step.stepLabel || step.label\\\"\\n                   [selected]=\\\"selectedIndex === i\\\"\\n                   [active]=\\\"step.completed || selectedIndex === i || !linear\\\"\\n                   [optional]=\\\"step.optional\\\"\\n                   [errorMessage]=\\\"step.errorMessage\\\"\\n                   [iconOverrides]=\\\"_iconOverrides\\\"\\n                   [disableRipple]=\\\"disableRipple\\\">\\n  </mat-step-header>\\n\\n  <div class=\\\"mat-vertical-content-container\\\" [class.mat-stepper-vertical-line]=\\\"!isLast\\\">\\n    <div class=\\\"mat-vertical-stepper-content\\\" role=\\\"tabpanel\\\"\\n         [attr.tabindex]=\\\"selectedIndex === i ? 0 : null\\\"\\n         [@stepTransition]=\\\"_getAnimationDirection(i)\\\"\\n         (@stepTransition.done)=\\\"_animationDone.next($event)\\\"\\n         [id]=\\\"_getStepContentId(i)\\\"\\n         [attr.aria-labelledby]=\\\"_getStepLabelId(i)\\\"\\n         [attr.aria-expanded]=\\\"selectedIndex === i\\\">\\n      <div class=\\\"mat-vertical-content\\\">\\n        <ng-container [ngTemplateOutlet]=\\\"step.content\\\"></ng-container>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\",\n                inputs: ['selectedIndex'],\n                host: {\n                    'class': 'mat-stepper-vertical',\n                    'aria-orientation': 'vertical',\n                    'role': 'tablist'\n                },\n                animations: [matStepperAnimations.verticalStepTransition],\n                providers: [\n                    { provide: MatStepper, useExisting: MatVerticalStepper },\n                    { provide: CdkStepper, useExisting: MatVerticalStepper }\n                ],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-stepper-vertical,.mat-stepper-horizontal{display:block}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;height:24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-content{outline:0}.mat-horizontal-stepper-content[aria-expanded=false]{height:0;overflow:hidden}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}.mat-vertical-content-container{margin-left:36px;border:0;position:relative}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;left:0;border-left-width:1px;border-left-style:solid}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0}.mat-vertical-content{padding:0 24px 24px 24px}.mat-step:last-child .mat-vertical-content-container{border:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc5.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Button that moves to the next step in a stepper workflow. */\nclass MatStepperNext extends CdkStepperNext {\n}\nMatStepperNext.ɵfac = function MatStepperNext_Factory(t) { return ɵMatStepperNext_BaseFactory(t || MatStepperNext); };\nMatStepperNext.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatStepperNext, selectors: [[\"button\", \"matStepperNext\", \"\"]], hostVars: 1, hostBindings: function MatStepperNext_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"type\", ctx.type);\n    } }, inputs: { type: \"type\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatStepperNext_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatStepperNext);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatStepperNext, [{\n        type: Directive,\n        args: [{\n                selector: 'button[matStepperNext]',\n                host: {\n                    '[type]': 'type'\n                },\n                inputs: ['type']\n            }]\n    }], null, null); })();\n/** Button that moves to the previous step in a stepper workflow. */\nclass MatStepperPrevious extends CdkStepperPrevious {\n}\nMatStepperPrevious.ɵfac = function MatStepperPrevious_Factory(t) { return ɵMatStepperPrevious_BaseFactory(t || MatStepperPrevious); };\nMatStepperPrevious.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatStepperPrevious, selectors: [[\"button\", \"matStepperPrevious\", \"\"]], hostVars: 1, hostBindings: function MatStepperPrevious_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"type\", ctx.type);\n    } }, inputs: { type: \"type\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatStepperPrevious_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatStepperPrevious);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatStepperPrevious, [{\n        type: Directive,\n        args: [{\n                selector: 'button[matStepperPrevious]',\n                host: {\n                    '[type]': 'type'\n                },\n                inputs: ['type']\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatStepperModule {\n}\nMatStepperModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatStepperModule });\nMatStepperModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatStepperModule_Factory(t) { return new (t || MatStepperModule)(); }, providers: [MAT_STEPPER_INTL_PROVIDER, ErrorStateMatcher], imports: [[\n            MatCommonModule,\n            CommonModule,\n            PortalModule,\n            MatButtonModule,\n            CdkStepperModule,\n            MatIconModule,\n            MatRippleModule,\n        ], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatStepperModule, { declarations: function () { return [MatHorizontalStepper, MatVerticalStepper, MatStep, MatStepLabel, MatStepper, MatStepperNext, MatStepperPrevious, MatStepHeader, MatStepperIcon]; }, imports: function () { return [MatCommonModule,\n        CommonModule,\n        PortalModule,\n        MatButtonModule,\n        CdkStepperModule,\n        MatIconModule,\n        MatRippleModule]; }, exports: function () { return [MatCommonModule, MatHorizontalStepper, MatVerticalStepper, MatStep, MatStepLabel, MatStepper, MatStepperNext, MatStepperPrevious, MatStepHeader, MatStepperIcon]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatStepperModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    MatCommonModule,\n                    CommonModule,\n                    PortalModule,\n                    MatButtonModule,\n                    CdkStepperModule,\n                    MatIconModule,\n                    MatRippleModule,\n                ],\n                exports: [\n                    MatCommonModule,\n                    MatHorizontalStepper,\n                    MatVerticalStepper,\n                    MatStep,\n                    MatStepLabel,\n                    MatStepper,\n                    MatStepperNext,\n                    MatStepperPrevious,\n                    MatStepHeader,\n                    MatStepperIcon,\n                ],\n                declarations: [\n                    MatHorizontalStepper,\n                    MatVerticalStepper,\n                    MatStep,\n                    MatStepLabel,\n                    MatStepper,\n                    MatStepperNext,\n                    MatStepperPrevious,\n                    MatStepHeader,\n                    MatStepperIcon,\n                ],\n                providers: [MAT_STEPPER_INTL_PROVIDER, ErrorStateMatcher]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_STEPPER_INTL_PROVIDER, MAT_STEPPER_INTL_PROVIDER_FACTORY, MatHorizontalStepper, MatStep, MatStepHeader, MatStepLabel, MatStepper, MatStepperIcon, MatStepperIntl, MatStepperModule, MatStepperNext, MatStepperPrevious, MatVerticalStepper, matStepperAnimations };\n\n//# sourceMappingURL=stepper.js.map","import {Injectable} from '@angular/core';\r\nimport {Plan} from '@common/core/types/models/Plan';\r\nimport {BehaviorSubject} from 'rxjs';\r\nimport { CurrentUser } from '@common/auth/current-user';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class SubscriptionStepperState {\r\n    public mode: 'pricing'|'subscribe'|'changePlan';\r\n\r\n    /**\r\n     * Stripe.js instance.\r\n     */\r\n    public stripe: stripe.Stripe;\r\n\r\n    /**\r\n     * All available plans.\r\n     */\r\n    public plans: Plan[] = [];\r\n\r\n    /**\r\n     * Model for plan period radio group.\r\n     */\r\n    public radioGroupModel: number;\r\n\r\n    /**\r\n     * Base plan, selected in the first step.\r\n     */\r\n    public initialPlan$ = new BehaviorSubject<Plan>(null);\r\n\r\n    /**\r\n     * Final billing plan user has selected (base or yearly alternative)\r\n     */\r\n    public selectedPlan$ = new BehaviorSubject<Plan>(null);\r\n\r\n    constructor(private currentUser: CurrentUser) {\r\n        // if user was subscribed by admin from admin area, they will not have\r\n        // any payment methods attached so we'll need to show payment panel as well\r\n        this.mode = this.currentUser.isSubscribed() && this.currentUser.getSubscription().gateway !== 'none'  ? 'changePlan' : 'subscribe';\r\n    }\r\n\r\n    /**\r\n     * Select initial \"base\" plan.\r\n     */\r\n    public selectInitialPlan(plan: Plan) {\r\n        this.initialPlan$.next(plan);\r\n\r\n        const children = this.getChildPlans(plan);\r\n\r\n        if (children && children[0]) {\r\n            this.radioGroupModel = children[0].id;\r\n            this.selectedPlan$.next(children[0]);\r\n        } else {\r\n            this.selectedPlan$.next(plan);\r\n            this.radioGroupModel = plan.id;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Select plan by specified ID.\r\n     */\r\n    public selectPlanById(id: number) {\r\n        this.selectedPlan$.next(this.plans.find(plan => plan.id === id));\r\n    }\r\n\r\n    /**\r\n     * Get different versions of specified plan.\r\n     * (yearly, weekly, every 2 years etc)\r\n     */\r\n    public getChildPlans(parent: Plan) {\r\n        return this.plans.filter(plan => plan.parent_id === parent.id && !plan.hidden);\r\n    }\r\n\r\n    /**\r\n     * Set all available plans.\r\n     */\r\n    public setPlans(plans: Plan[]) {\r\n        this.plans = plans;\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class LocalStorage {\r\n    private readonly storage;\r\n\r\n    constructor() {\r\n        if (this.localStorageAvailable()) {\r\n            this.storage = localStorage;\r\n        } else {\r\n            this.storage = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Retrieve specified item from local storage.\r\n     */\r\n    public get<T>(key: string, defaultValue?: T): any|T {\r\n        if ( ! this.storage) return defaultValue;\r\n\r\n        let value;\r\n        try {\r\n            value = JSON.parse(this.storage.getItem(key));\r\n        } catch (e) {\r\n            //\r\n        }\r\n\r\n        return value == null ? defaultValue : value;\r\n    }\r\n\r\n    /**\r\n     * Store specified item in local storage.\r\n     */\r\n    public set(key: string, value: any) {\r\n        if ( ! this.storage) return null;\r\n        value = JSON.stringify(value);\r\n        this.storage.setItem(key, value);\r\n    }\r\n\r\n    /**\r\n     * Remove specified item from local storage.\r\n     */\r\n    public remove(key: string) {\r\n        if ( ! this.storage) return null;\r\n        this.storage.removeItem(key);\r\n    }\r\n\r\n    /**\r\n     * Check if local storage is available.\r\n     */\r\n    public localStorageAvailable(): boolean {\r\n        const test = 'test';\r\n\r\n        try {\r\n            localStorage.setItem(test, test);\r\n            localStorage.removeItem(test);\r\n            return true;\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {AppHttpClient} from '../../core/http/app-http-client.service';\r\nimport {Settings} from '../../core/config/settings.service';\r\nimport {User} from '../../core/types/models/User';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { Subscriptions } from '../../shared/billing/subscriptions.service';\r\nimport { Subscription } from '../../shared/billing/models/subscription';\r\nimport {Plan} from '@common/core/types/models/Plan';\r\nimport { Translations } from '@common/core/translations/translations.service';\r\nimport {BackendErrorResponse} from '@common/core/types/backend-error-response';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class PaypalSubscriptions {\r\n    private popupWidth = 450;\r\n    private popupHeight = 650;\r\n\r\n    /**\r\n     * Params for popup window.\r\n     */\r\n    private popupParams = {\r\n        menubar: 0,\r\n        location: 0,\r\n        locationbar: 0,\r\n        toolbar: 0,\r\n        titlebar: 0,\r\n        status: 0,\r\n        scrollbars: 1,\r\n        width: this.popupWidth,\r\n        height: this.popupHeight\r\n    };\r\n\r\n    // TODO: clean this up with rxjs or checkout.js\r\n    private resolveSubscribe: Function;\r\n    private rejectSubscribe: Function;\r\n    private subscriptionPending = false;\r\n    private executingAgreement = false;\r\n    private popup: Window;\r\n\r\n    constructor(\r\n        private http: AppHttpClient,\r\n        private settings: Settings,\r\n        private subscriptions: Subscriptions,\r\n        private i18n: Translations,\r\n    ) {}\r\n\r\n    /**\r\n     * Subscribe to specified plan on paypal.\r\n     */\r\n    public subscribe(params: {plan_id: number, start_date?: string}): Promise<User> {\r\n        this.subscriptionPending = true;\r\n\r\n        this.popup = this.openPaypalPopup(this.settings.getBaseUrl(true) + 'billing/paypal/loading');\r\n\r\n        return new Promise((resolve, reject) => {\r\n            this.rejectSubscribe = reject;\r\n            this.resolveSubscribe = resolve;\r\n\r\n            this.createPaypalAgreement(params).subscribe(response => {\r\n                this.listenForMessages(params.plan_id);\r\n                this.popup.location.href = response.urls.approve;\r\n            }, errResponse => this.rejectSubscriptionPromise(errResponse));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Change plan of subscription to specified one.\r\n     */\r\n    public changePlan(subscription: Subscription, plan: Plan): Promise<User> {\r\n        return new Promise(resolve => {\r\n            this.subscriptions.cancel(subscription.id, {delete: true}).subscribe(() => {\r\n                this.subscribe({plan_id: plan.id, start_date: subscription.renews_at}).then(user => resolve(user));\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Listen for messages from paypal window and execute paypal agreement.\r\n     */\r\n    private listenForMessages(planId: number) {\r\n        window.addEventListener('message', e => {\r\n            if (this.settings.getBaseUrl().indexOf(e.origin) === -1) return;\r\n\r\n            // user cancelled payment on paypal popup manually\r\n            if (e.data.status !== 'success') {\r\n                return this.rejectSubscriptionPromise();\r\n            }\r\n\r\n            // user approved payment\r\n            this.executingAgreement = true;\r\n            this.executePaypalAgreement(e.data.token, planId)\r\n                .pipe(finalize(() => this.executingAgreement = false))\r\n                .subscribe(\r\n                    response => this.resolveSubscriptionPromise(response.user),\r\n                    (errResponse: BackendErrorResponse) => this.rejectSubscriptionPromise(),\r\n                );\r\n        }, false);\r\n    }\r\n\r\n    /**\r\n     * Open new paypal express popup window.\r\n     */\r\n    private openPaypalPopup(url: string) {\r\n        const params = Object.assign({}, this.popupParams, {\r\n            left: (screen.width / 2) - (this.popupWidth / 2),\r\n            top: (screen.height / 2) - (this.popupHeight / 2)\r\n        });\r\n\r\n        const newWindow = window.open(\r\n            url,\r\n            'PayPal',\r\n            Object.keys(params).map(key => key + '=' + params[key]).join(', '),\r\n        );\r\n\r\n        const interval = setInterval(() => {\r\n            if (newWindow == null || newWindow.closed) {\r\n                window.clearInterval(interval);\r\n\r\n                if (this.subscriptionPending && ! this.executingAgreement) {\r\n                    this.rejectSubscriptionPromise();\r\n                }\r\n            }\r\n        }, 1000);\r\n\r\n        return newWindow;\r\n    }\r\n\r\n    private createPaypalAgreement(params: {plan_id: number, start_date?: string}): Observable<{urls: {execute: string, approve: string}}> {\r\n        return this.http.post('billing/subscriptions/paypal/agreement/create', {plan_id: params.plan_id, start_date: params.start_date});\r\n    }\r\n\r\n    private executePaypalAgreement(agreement_id: string, plan_id: number): Observable<{user: User}> {\r\n        return this.http.post('billing/subscriptions/paypal/agreement/execute', {agreement_id, plan_id});\r\n    }\r\n\r\n    /**\r\n     * Reject subscription promise.\r\n     */\r\n    private rejectSubscriptionPromise(errResponse?: BackendErrorResponse) {\r\n        this.rejectSubscribe(this.i18n.t(errResponse?.message || 'Payment failed. Please try again later.'));\r\n        this.subscriptionPending = false;\r\n        this.popup && this.popup.close();\r\n    }\r\n\r\n    /**\r\n     * Resolve subscription promise.\r\n     */\r\n    private resolveSubscriptionPromise(user: User) {\r\n        this.resolveSubscribe(user);\r\n        this.subscriptionPending = false;\r\n    }\r\n}\r\n","<material-navbar [hideRegisterButton]=\"state.mode === 'pricing'\"></material-navbar>\r\n\r\n<div class=\"bg-wrapper\">\r\n    <mat-horizontal-stepper class=\"container main-content\" [linear]=\"true\">\r\n        <ng-template matStepperIcon=\"edit\">\r\n            <mat-icon svgIcon=\"edit\" class=\"size-16\"></mat-icon>\r\n        </ng-template>\r\n\r\n        <mat-step [label]=\"'Subscription plan' | trans\" [completed]=\"!!(state.initialPlan$ | async)\">\r\n            <select-plan-panel (selected)=\"nextStep()\"></select-plan-panel>\r\n            <contact-widget></contact-widget>\r\n        </mat-step>\r\n\r\n        <mat-step [label]=\"'Subscription interval' | trans\" [completed]=\"!!(state.selectedPlan$ | async)\">\r\n            <select-plan-period-panel [showSidebar]=\"true\" (selected)=\"nextStep()\"></select-plan-period-panel>\r\n        </mat-step>\r\n\r\n        <mat-step [label]=\"'Payment' | trans\" [completed]=\"false\" *ngIf=\"state.mode === 'subscribe'\">\r\n            <div class=\"step-container payment-step\">\r\n                <div class=\"left-col\">\r\n                    <create-subscription-panel [plan]=\"state.selectedPlan$ | async\" (loading)=\"loading$.next($event)\" (completed)=\"onCompleted()\"></create-subscription-panel>\r\n                </div>\r\n\r\n                <upgrade-page-aside [plan]=\"state.selectedPlan$ | async\" class=\"right-col\"></upgrade-page-aside>\r\n            </div>\r\n\r\n            <p\r\n                class=\"legal-info\" *ngIf=\"state.selectedPlan$ | async as plan\"\r\n                trans\r\n                [transValues]=\"{\r\n                    siteName: settings.get('branding.site_name'),\r\n                    intervalCount: plan.interval_count > 1 ? plan.interval_count : '',\r\n                    intervalName: plan.interval_count > 1 ? plan.interval + 's' : plan.interval\r\n                }\">\r\n                You authorise :siteName to charge you automatically every :intervalCount :intervalName, until you cancel your subscription. You consent to get access to your :siteName subscription immediately, and acknowledge that refunds are only available within 14 days and provided you haven't accessed :siteName. You will be able to cancel your subscription at any time from your profile page.\r\n            </p>\r\n        </mat-step>\r\n    </mat-horizontal-stepper>\r\n</div>\r\n\r\n<loading-indicator class=\"overlay\" [isVisible]=\"loading$ | async\"></loading-indicator>\r\n","import { ChangeDetectionStrategy, Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { MatStepper } from '@angular/material/stepper';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { SubscriptionStepperState } from '../subscriptions/subscription-stepper-state.service';\r\nimport { Settings } from '../../core/config/settings.service';\r\nimport { Toast } from '../../core/ui/toast.service';\r\nimport { Subscriptions } from '../../shared/billing/subscriptions.service';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { LocalStorage } from '@common/core/services/local-storage.service';\r\nimport { Plan } from '@common/core/types/models/Plan';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { CurrentUser } from '@common/auth/current-user';\r\nimport { PaypalSubscriptions } from '@common/billing/subscriptions/paypal-subscriptions';\r\n\r\nexport interface CreditCard {\r\n    number?: number|string;\r\n    expiration_month?: number|string;\r\n    expiration_year?: number|string;\r\n    security_code?: number|string;\r\n}\r\n\r\nenum Steps {\r\n    Plans = 0,\r\n    Period = 1,\r\n    Payment = 2\r\n}\r\n\r\ninterface LocalStorageState {\r\n    initial?: number;\r\n    final?: number;\r\n}\r\n\r\nconst LOCAL_STORAGE_KEY = 'be.onboarding.selected';\r\n\r\n@Component({\r\n    selector: 'upgrade-page',\r\n    templateUrl: './upgrade-page.component.html',\r\n    styleUrls: ['./upgrade-page.component.scss'],\r\n    providers: [SubscriptionStepperState],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class UpgradePageComponent implements OnInit {\r\n    @ViewChild(MatStepper, { static: true }) stepper: MatStepper;\r\n    @Input() set mode(value: 'pricing'|'subscribe'|'changePlan') {\r\n        this.state.mode = value;\r\n    }\r\n    public loading$ = new BehaviorSubject<boolean>(false);\r\n\r\n    constructor(\r\n        private subscriptions: Subscriptions,\r\n        private route: ActivatedRoute,\r\n        public settings: Settings,\r\n        private router: Router,\r\n        private toast: Toast,\r\n        public state: SubscriptionStepperState,\r\n        private localStorage: LocalStorage,\r\n        private currentUser: CurrentUser,\r\n        private paypalSubscriptions: PaypalSubscriptions,\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.route.data.subscribe((data: {plans: Plan[]}) => {\r\n            this.state.setPlans(data.plans);\r\n            if (this.state.mode === 'subscribe') {\r\n               this.hydrateStateFromLocalStorage();\r\n            }\r\n        });\r\n    }\r\n\r\n    private hydrateStateFromLocalStorage() {\r\n        const storedState = this.localStorage.get(LOCAL_STORAGE_KEY) as LocalStorageState;\r\n        if (storedState && storedState.initial && storedState.final) {\r\n            const initialPlan = this.state.plans.find(p => p.id === storedState.initial),\r\n                finalPlan = this.state.plans.find(p => p.id === storedState.final);\r\n            if (initialPlan && finalPlan) {\r\n                this.state.selectInitialPlan(initialPlan);\r\n                this.state.selectPlanById(finalPlan.id);\r\n                this.stepper.selectedIndex = Steps.Payment;\r\n            }\r\n        }\r\n    }\r\n\r\n    public nextStep() {\r\n        // User is changing their plan, there's no need to get their payment information\r\n        if (this.state.mode === 'changePlan' && this.stepper.selectedIndex === Steps.Period) {\r\n            this.changePlan();\r\n        // User has selected free plan in pricing page. Redirect them to sign-up page\r\n        } else if (this.state.mode === 'pricing' && this.state.selectedPlan$.value.free && this.stepper.selectedIndex === Steps.Plans) {\r\n            this.router.navigate(['register']);\r\n        // User has selected paid plan on pricing page, but have not signed up yet,\r\n        // store selected plan data in local storage and redirect to sign-up page\r\n        } else if (this.state.mode === 'pricing' && this.stepper.selectedIndex === Steps.Period) {\r\n            this.localStorage.set(LOCAL_STORAGE_KEY, {\r\n                initial: this.state.initialPlan$.value.id,\r\n                final: this.state.selectedPlan$.value.id\r\n            });\r\n            this.router.navigate(['register']);\r\n        // Continue to next subscription flow step\r\n        } else {\r\n            this.stepper.next();\r\n        }\r\n    }\r\n\r\n    public onCompleted() {\r\n        this.loading$.next(false);\r\n        this.router.navigate(['/']);\r\n        this.localStorage.remove(LOCAL_STORAGE_KEY);\r\n        this.toast.open({\r\n            message: 'Subscribed to \":planName\" plan successfully.',\r\n            replacements: {planName: this.getSelectedOrParentPlanName()},\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Change user's active subscription plan to specified one.\r\n     */\r\n    public changePlan() {\r\n        const plan = this.state.selectedPlan$.value,\r\n            activeSubscription = this.currentUser.getSubscription();\r\n        // user already subscribed\r\n        if (this.currentUser.getSubscription({planId: plan.id})) {\r\n            return;\r\n        }\r\n        this.loading$.next(true);\r\n        if (activeSubscription.gateway === 'paypal') {\r\n            this.paypalSubscriptions.changePlan(activeSubscription, plan).then(user => {\r\n                this.loading$.next(false);\r\n                this.currentUser.assignCurrent(user);\r\n                this.router.navigate(['/billing/subscription']);\r\n                this.toast.open('Subscription plan changed.');\r\n            });\r\n        } else {\r\n            this.subscriptions.changePlan(activeSubscription.id, plan)\r\n                .pipe(finalize(() => this.loading$.next(false)))\r\n                .subscribe(response => {\r\n                    this.currentUser.assignCurrent(response['user']);\r\n                    this.router.navigate(['/billing/subscription']);\r\n                    this.toast.open('Subscription plan changed.');\r\n                });\r\n        }\r\n    }\r\n\r\n    private getSelectedOrParentPlanName(): string {\r\n        const selectedPlan = this.state.selectedPlan$.value;\r\n        const plan = selectedPlan.parent ? selectedPlan.parent : selectedPlan;\r\n        return plan.name;\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Resolve, RouterStateSnapshot, ActivatedRouteSnapshot, Router} from '@angular/router';\r\nimport {catchError, map, mergeMap} from 'rxjs/operators';\r\nimport {EMPTY, Observable, of} from 'rxjs';\r\nimport {Plan} from '@common/core/types/models/Plan';\r\nimport {Plans} from '@common/shared/billing/plans.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class BillingPlansResolver implements Resolve<Plan[]> {\r\n    constructor(\r\n        private plans: Plans,\r\n        private router: Router\r\n    ) {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Plan[]> {\r\n        return this.plans.all({order: 'position|asc', perPage: 30})\r\n            .pipe(map(response => response.pagination.data))\r\n            .pipe(\r\n                catchError(() => {\r\n                    this.router.navigateByUrl('/');\r\n                    return EMPTY;\r\n                }),\r\n                mergeMap((plans: Plan[]) => {\r\n                    return of(plans);\r\n                })\r\n            );\r\n    }\r\n}\r\n\r\n","<div class=\"text\" trans>Accepted Payment Methods</div>\r\n<div class=\"card-icons\">\r\n    <img [src]=\"getCardIcon('paypal')\">\r\n    <img [src]=\"getCardIcon(card)\" *ngFor=\"let card of acceptedCards\">\r\n</div>","import {ChangeDetectionStrategy, Component, ElementRef, OnInit} from '@angular/core';\r\nimport {Settings} from '@common/core/config/settings.service';\r\n\r\n@Component({\r\n    selector: 'accepted-payments-header',\r\n    templateUrl: './accepted-payments-header.component.html',\r\n    styleUrls: ['./accepted-payments-header.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AcceptedPaymentsHeaderComponent implements OnInit {\r\n    public acceptedCards: string[] = [];\r\n\r\n    constructor(private settings: Settings, public el: ElementRef) {}\r\n\r\n    ngOnInit() {\r\n        this.acceptedCards = this.settings.getJson('billing.accepted_cards', []);\r\n    }\r\n\r\n    public getCardIcon(card: string) {\r\n        return this.settings.getAssetUrl() + 'images/billing/' + card.toLowerCase() + '.png';\r\n    }\r\n}\r\n","<ul *ngIf=\"getPlan()\" [class.dense]=\"dense\">\r\n    <ng-container *ngIf=\"getPlan().show_permissions\">\r\n        <li *ngFor=\"let permission of getPlan().permissions\">\r\n            <mat-icon class=\"check-icon\" svgIcon=\"check\" *ngIf=\"showCheckIcons\"></mat-icon>\r\n            <span>{{permission.display_name || permission.name}}</span>\r\n        </li>\r\n    </ng-container>\r\n    <ng-container *ngIf=\"getPlan().features.length\">\r\n        <li *ngFor=\"let feature of getPlan().features\">\r\n            <mat-icon class=\"check-icon\" svgIcon=\"check\" *ngIf=\"showCheckIcons\"></mat-icon>\r\n            <span>{{feature}}</span>\r\n        </li>\r\n    </ng-container>\r\n</ul>","import {ChangeDetectionStrategy, Component, Input} from '@angular/core';\r\nimport {Plan} from '@common/core/types/models/Plan';\r\n\r\n@Component({\r\n    selector: 'plan-features-list',\r\n    templateUrl: './plan-features-list.component.html',\r\n    styleUrls: ['./plan-features-list.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class PlanFeaturesListComponent {\r\n    @Input() plan: Plan;\r\n    @Input() showCheckIcons = false;\r\n    @Input() dense = false;\r\n\r\n    public getPlan() {\r\n        return this.plan.parent || this.plan;\r\n    }\r\n}\r\n","<accepted-payments-header></accepted-payments-header>\r\n\r\n<ng-container *ngIf=\"plan\">\r\n    <div class=\"selected-plan\">\r\n        <div class=\"header\"><full-plan-name [plan]=\"plan\"></full-plan-name></div>\r\n        <plan-features-list class=\"plan-features-list\" [plan]=\"plan\" [showCheckIcons]=\"true\" [dense]=\"true\"></plan-features-list>\r\n    </div>\r\n\r\n    <div class=\"divider\"></div>\r\n\r\n    <div class=\"secure-shopping\">\r\n        <div class=\"icon-container\">\r\n            <mat-icon svgIcon=\"shield-custom\"></mat-icon>\r\n        </div>\r\n        <div class=\"text\">\r\n            <div class=\"primary\" trans>SSL Secure Payment</div>\r\n            <div class=\"secondary\" trans>Your information is protected by 256-bit SSL encryption</div>\r\n        </div>\r\n    </div>\r\n</ng-container>","import {ChangeDetectionStrategy, Component, Input} from '@angular/core';\r\nimport {Plan} from '@common/core/types/models/Plan';\r\n\r\n@Component({\r\n    selector: 'upgrade-page-aside',\r\n    templateUrl: './upgrade-page-aside.component.html',\r\n    styleUrls: ['./upgrade-page-aside.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class UpgradePageAsideComponent {\r\n    @Input() plan: Plan;\r\n}\r\n","<ng-container *ngIf=\"state.selectedPlan$ | async as selectedPlan\">\r\n    <div class=\"line\">\r\n        <div class=\"summary-left\">\r\n            <full-plan-name [plan]=\"selectedPlan\"></full-plan-name>\r\n        </div>\r\n        <div class=\"summary-right\">{{selectedPlan.amount | currency:selectedPlan.currency}}</div>\r\n    </div>\r\n\r\n    <div class=\"line emphasis\">\r\n        <div class=\"summary-left\" trans>Total</div>\r\n        <div class=\"summary-right\">{{selectedPlan.amount | currency:selectedPlan.currency}}</div>\r\n    </div>\r\n</ng-container>","import {ChangeDetectionStrategy, Component} from '@angular/core';\r\nimport {SubscriptionStepperState} from '@common/billing/subscriptions/subscription-stepper-state.service';\r\n\r\n@Component({\r\n    selector: 'order-summary',\r\n    templateUrl: './order-summary.component.html',\r\n    styleUrls: ['./order-summary.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class OrderSummaryComponent {\r\n    constructor(public state: SubscriptionStepperState) {}\r\n}\r\n","<form (ngSubmit)=\"submitForm()\" class=\"card-form many-inputs\" ngNativeValidate>\r\n    <div class=\"input-container\">\r\n        <label for=\"cardNumber\" trans>Credit or Debit Card</label>\r\n        <div id=\"cardNumber\" class=\"fake-input\"></div>\r\n    </div>\r\n\r\n    <div class=\"input-container\">\r\n        <label for=\"cardExpiry\" trans>Card Expiration</label>\r\n        <div id=\"cardExpiry\" class=\"fake-input\"></div>\r\n    </div>\r\n\r\n    <div class=\"input-container\">\r\n        <label for=\"cardCvc\" trans>CVC</label>\r\n        <div id=\"cardCvc\" class=\"fake-input\"></div>\r\n    </div>\r\n\r\n    <div class=\"error margin-bottom\" role=\"alert\" *ngIf=\"error$ | async as error\">{{error}}</div>\r\n\r\n    <order-summary *ngIf=\"showOrderSummary\"></order-summary>\r\n\r\n    <button type=\"submit\" *ngIf=\"showSubmitButton\" mat-raised-button color=\"accent\" [disabled]=\"loading$ | async\">{{submitButtonText | trans}}</button>\r\n</form>\r\n","import {\r\n    AfterViewInit,\r\n    ChangeDetectionStrategy,\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    NgZone,\r\n    OnDestroy,\r\n    Output\r\n} from '@angular/core';\r\nimport {finalize} from 'rxjs/operators';\r\nimport {User} from '../../core/types/models/User';\r\nimport {Settings} from '../../core/config/settings.service';\r\nimport {LazyLoaderService} from '../../core/utils/lazy-loader.service';\r\nimport {CurrentUser} from '../../auth/current-user';\r\nimport {Subscriptions} from '../../shared/billing/subscriptions.service';\r\nimport {Toast} from '../../core/ui/toast.service';\r\nimport {ThemeService} from '@common/core/theme.service';\r\nimport {BehaviorSubject} from 'rxjs';\r\nimport {SubscriptionStepperState} from '@common/billing/subscriptions/subscription-stepper-state.service';\r\nimport {BackendErrorResponse} from '@common/core/types/backend-error-response';\r\n\r\n@Component({\r\n    selector: 'credit-card-form',\r\n    templateUrl: './credit-card-form.component.html',\r\n    styleUrls: ['./credit-card-form.component.scss'],\r\n    // changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CreditCardFormComponent implements OnDestroy, AfterViewInit {\r\n\r\n    /**\r\n     * Event fired when form is submitted and card is added successfully on active gateway.\r\n     */\r\n    @Output() created: EventEmitter<User> = new EventEmitter();\r\n\r\n    /**\r\n     * Display text for form submit button.\r\n     */\r\n    @Input() submitButtonText = 'Submit';\r\n\r\n    /**\r\n     * Whether form submit button should be shown.\r\n     */\r\n    @Input() showSubmitButton = true;\r\n\r\n    /**\r\n     * Whether order summary should be shown in the template.\r\n     */\r\n    @Input() showOrderSummary = false;\r\n\r\n    public loading$ = new BehaviorSubject<boolean>(false);\r\n    public error$ = new BehaviorSubject<string>(null);\r\n    private stripeElements: stripe.elements.Element[] = [];\r\n\r\n    constructor(\r\n        private subscriptions: Subscriptions,\r\n        private currentUser: CurrentUser,\r\n        private settings: Settings,\r\n        private zone: NgZone,\r\n        private lazyLoader: LazyLoaderService,\r\n        private toast: Toast,\r\n        private theme: ThemeService,\r\n        private state: SubscriptionStepperState,\r\n    ) {\r\n        this.resetForm();\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.initStripe();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroyStripe();\r\n    }\r\n\r\n    /**\r\n     * Submit stripe elements credit card form.\r\n     */\r\n    public async submitForm() {\r\n        this.loading$.next(true);\r\n\r\n        const {token, error} = await this.state.stripe.createToken(this.stripeElements[0]);\r\n\r\n        if (error) {\r\n            this.error$.next(error.message);\r\n            this.loading$.next(false);\r\n        } else {\r\n            this.addCardToUser(token);\r\n        }\r\n    }\r\n\r\n    public addCardToUser(stripeToken: stripe.Token) {\r\n        this.loading$.next(true);\r\n        this.subscriptions.addCard(stripeToken.id)\r\n            .pipe(finalize(() =>  this.loading$.next(false)))\r\n            .subscribe(response => {\r\n                this.resetForm();\r\n                this.currentUser.assignCurrent(response.user);\r\n                this.created.emit(response.user);\r\n            }, (errResponse: BackendErrorResponse) => {\r\n                this.error$.next(errResponse.message);\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Initiate stripe elements credit card form.\r\n     */\r\n    private initStripe() {\r\n        this.lazyLoader.loadAsset('https://js.stripe.com/v3', {type: 'js'}).then(() => {\r\n            const fields = ['cardNumber', 'cardExpiry', 'cardCvc'] as stripe.elements.elementsType[];\r\n            this.state.stripe = Stripe(this.settings.get('billing.stripe_public_key'));\r\n            const elements = this.state.stripe.elements();\r\n\r\n            const isDarkMode = this.theme.selectedTheme$.value.is_dark;\r\n            fields.forEach(field => {\r\n                const el = elements.create(field, {classes: {base: 'base'}, style: {base: {color: isDarkMode ? '#fff' : 'inherit'}}});\r\n                el.mount('#' + field);\r\n                el.on('change', this.onChange.bind(this));\r\n                this.stripeElements.push(el);\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Destroy all stripe elements instances.\r\n     */\r\n    private destroyStripe() {\r\n        this.stripeElements.forEach(el => {\r\n            el.unmount();\r\n            el.destroy();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Fired on stripe element \"change\" event.\r\n     */\r\n    private onChange(change: stripe.elements.ElementChangeResponse) {\r\n        this.zone.run(() => {\r\n            this.error$.next(change.error ? change.error.message : null);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Reset credit card form.\r\n     */\r\n    private resetForm() {\r\n        this.error$.next(null);\r\n    }\r\n}\r\n","<mat-tab-group [dynamicHeight]=\"true\" color=\"accent\" [selectedIndex]=\"selectedIndex$ | async\">\r\n    <mat-tab [label]=\"'Bank Card' | trans\" *ngIf=\"settings.get('billing.stripe.enable')\">\r\n        <credit-card-form (created)=\"subscribeOnStripe()\" [submitButtonText]=\"submitText\" [showOrderSummary]=\"true\"></credit-card-form>\r\n    </mat-tab>\r\n    <mat-tab label=\"Paypal\" [disabled]=\"disablePaypalTab\" *ngIf=\"settings.get('billing.paypal.enable')\">\r\n        <div class=\"paypal-tab\">\r\n            <p class=\"info\" trans>After clicking the button below, you will be redirected to paypal.com to approve the subscription.</p>\r\n            <order-summary></order-summary>\r\n            <button mat-raised-button color=\"accent\" (click)=\"subscribeOnPaypal()\" [disabled]=\"loading$ | async\">{{submitText | trans}}</button>\r\n        </div>\r\n    </mat-tab>\r\n</mat-tab-group>\r\n","import {ChangeDetectionStrategy, Component, EventEmitter, Input, Output} from '@angular/core';\r\nimport {Subscription} from '@common/shared/billing/models/subscription';\r\nimport {Plan} from '@common/core/types/models/Plan';\r\nimport {CreateSubOnStripeResponse, Subscriptions} from '@common/shared/billing/subscriptions.service';\r\nimport {CurrentUser} from '@common/auth/current-user';\r\nimport {PaypalSubscriptions} from '@common/billing/subscriptions/paypal-subscriptions';\r\nimport {Toast} from '@common/core/ui/toast.service';\r\nimport {Settings} from '@common/core/config/settings.service';\r\nimport {User} from '@common/core/types/models/User';\r\nimport {CreditCard} from '@common/billing/upgrade-page/upgrade-page.component';\r\nimport {BehaviorSubject} from 'rxjs';\r\nimport {SubscriptionStepperState} from '@common/billing/subscriptions/subscription-stepper-state.service';\r\nimport {BackendErrorResponse} from '@common/core/types/backend-error-response';\r\nimport {HttpErrors} from '@common/core/http/errors/http-errors.enum';\r\n\r\nexport interface SubscriptionCompletedEvent {\r\n    status: 'created'|'updated';\r\n}\r\n\r\ninterface NewSubscriptionPayload {\r\n    card?: CreditCard;\r\n    start_date?: string;\r\n    plan_id: number;\r\n}\r\n\r\n@Component({\r\n    selector: 'create-subscription-panel',\r\n    templateUrl: './create-subscription-panel.component.html',\r\n    styleUrls: ['./create-subscription-panel.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CreateSubscriptionPanelComponent {\r\n    public loading$ = new BehaviorSubject<boolean>(false);\r\n    public selectedIndex$ = new BehaviorSubject<number>(0);\r\n\r\n    /**\r\n     * Fired when subscription creation starts or ends.\r\n     */\r\n    @Output() loading = new EventEmitter<boolean>();\r\n\r\n    /**\r\n     * Text for submit purchase button.\r\n     */\r\n    @Input() submitText = 'Submit Purchase';\r\n\r\n    /**\r\n     * Whether paypal tab should be disabled.\r\n     */\r\n    @Input() disablePaypalTab = false;\r\n\r\n    /**\r\n     * We're changing user subscription from this one.\r\n     * Used for prorating the new subscription start date.\r\n     */\r\n    @Input() from: Subscription;\r\n\r\n    /**\r\n     * Plan user should be subscribed to.\r\n     */\r\n    @Input() plan: Plan;\r\n\r\n    /**\r\n     * Fired when subscription is created or updated.\r\n     */\r\n    @Output() completed: EventEmitter<SubscriptionCompletedEvent> = new EventEmitter();\r\n\r\n    constructor(\r\n        private subscriptions: Subscriptions,\r\n        private currentUser: CurrentUser,\r\n        private paypal: PaypalSubscriptions,\r\n        private toast: Toast,\r\n        public settings: Settings,\r\n        private state: SubscriptionStepperState,\r\n    ) {}\r\n\r\n    /**\r\n     * Subscribe user to current plan on stripe gateway.\r\n     */\r\n    public subscribeOnStripe() {\r\n        // if user is already subscribed to this plan, fire \"updated\" event and bail\r\n        if (this.currentUser.getSubscription({gateway: 'stripe', planId: this.plan.id})) {\r\n            return this.completed.emit({status: 'updated'});\r\n        }\r\n\r\n        this.startLoading();\r\n\r\n        this.subscriptions.createOnStripe(this.getNewSubscriptionPayload())\r\n            .subscribe(response => {\r\n                if (response.status === 'complete') {\r\n                    this.completeSubscription(response.user);\r\n                } else {\r\n                   this.confirmCardPayment(response);\r\n                }\r\n            }, (errResponse: BackendErrorResponse) => {\r\n                const key = Object.keys(errResponse.errors)[0];\r\n                this.toast.open(errResponse.errors[key] || HttpErrors.Default);\r\n                this.stopLoading();\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Confirm card payment via 3D secure.\r\n     */\r\n    private confirmCardPayment(response: CreateSubOnStripeResponse) {\r\n        this.state.stripe.confirmCardPayment(response.payment_intent_secret)\r\n            .then(result => {\r\n                if (result.error) {\r\n                    this.stopLoading();\r\n                    this.toast.open('Card payment was not confirmed.', {action: 'Retry'})\r\n                        .onAction()\r\n                        .subscribe(() => {\r\n                            this.confirmCardPayment(response);\r\n                        });\r\n                } else {\r\n                    this.subscriptions.finalizeOnStripe(response.reference, response.user.id)\r\n                        .subscribe(finalResponse => {\r\n                            this.completeSubscription(finalResponse.user);\r\n                        });\r\n                }\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Subscribe user to current plan on paypal gateway.\r\n     */\r\n    public subscribeOnPaypal() {\r\n        // if user is already subscribed to this plan, fire \"updated\" event and bail\r\n        if (this.currentUser.getSubscription({gateway: 'paypal', planId: this.plan.id})) {\r\n            return this.completed.emit({status: 'updated'});\r\n        }\r\n\r\n        this.startLoading();\r\n\r\n        this.paypal.subscribe(this.getNewSubscriptionPayload()).then(user => {\r\n            this.completeSubscription(user);\r\n            this.selectedIndex$.next(0);\r\n        }).catch(message => {\r\n            this.stopLoading();\r\n            this.toast.open(message || 'There was an issue. Please try again later.');\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get payload for backend for creating a new subscription.\r\n     */\r\n    private getNewSubscriptionPayload(): NewSubscriptionPayload {\r\n       const payload = {plan_id: this.plan.id};\r\n\r\n       if (this.from) {\r\n           payload['start_date'] = this.from.renews_at;\r\n       }\r\n\r\n       return payload;\r\n    }\r\n\r\n    private completeSubscription(user: User) {\r\n        this.stopLoading();\r\n        this.currentUser.assignCurrent(user);\r\n        this.completed.emit({status: 'created'});\r\n    }\r\n\r\n    private startLoading() {\r\n        this.loading$.next(true);\r\n        this.loading.emit(true);\r\n    }\r\n\r\n    private stopLoading() {\r\n        this.loading$.next(false);\r\n        this.loading.emit(false);\r\n    }\r\n}\r\n","<material-navbar [menuPosition]=\"settings.get('vebto.navbar.defaultPosition')\"></material-navbar>\r\n\r\n<div class=\"content container mat-elevation-z1\" *ngIf=\"activeSubscription$ | async as activeSubscription\">\r\n    <div class=\"main\">\r\n        <div class=\"main-section\">\r\n            <div class=\"main-section-title\"><full-plan-name [plan]=\"activeSubscription.plan\"></full-plan-name></div>\r\n            <div class=\"main-section-content\">\r\n                <ng-container *ngIf=\"canCancel()\">\r\n                    <p>\r\n                        {{ 'Your plan will automatically renew on' | trans }}\r\n                        <strong>{{getFormattedRenewDate() | formattedDate}}</strong>\r\n                        {{ \"and you'll be charged\" | trans }}\r\n                        <strong>{{activeSubscription.plan.amount | currency:activeSubscription.plan.currency}}</strong>.\r\n                    </p>\r\n\r\n                    <a mat-raised-button color=\"accent\" routerLink=\"/billing/upgrade\" trans>Change Plan</a>\r\n                </ng-container>\r\n\r\n                <ng-container *ngIf=\"canResume()\">\r\n                    <p>{{ 'You are on a grace period until' | trans }} <strong>{{getFormattedEndDate() | formattedDate}}</strong>. {{ 'Your subscription will not automatically resume and you will not be charged' | trans }}.</p>\r\n                    <p trans>You still have access to your plan's features until this date and you can resume your subscription anytime, by clicking button below.</p>\r\n                    <button mat-raised-button color=\"accent\" (click)=\"resumeSubscription()\" trans>Resume</button>\r\n                </ng-container>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"main-section\" *ngIf=\"canCancel() && canChangePaymentMethod()\">\r\n            <div class=\"main-section-title\" trans>Payment Method</div>\r\n            <div class=\"main-title-description\" trans>Change your preferred payment method below. You can use a credit card or PayPal.</div>\r\n\r\n            <p>{{ 'Current payment Method' | trans }}: <strong>{{activeSubscription.gateway === 'paypal' ? 'PayPal' : ('Credit Card' | trans)}}</strong></p>\r\n\r\n            <div class=\"card-preview\" *ngIf=\"activeSubscription.gateway === 'stripe'\">\r\n                <div class=\"icon\"><mat-icon svgIcon=\"credit-card\"></mat-icon></div>\r\n                <div class=\"info\">{{currentUser.get('card_brand')}} **** {{currentUser.get('card_last_four')}}</div>\r\n            </div>\r\n\r\n            <create-subscription-panel\r\n                    (completed)=\"onPaymentMethodChange($event)\"\r\n                    (loading)=\"loading$.next($event)\"\r\n                    [plan]=\"getPlan()\"\r\n                    [from]=\"activeSubscription\"\r\n                    [disablePaypalTab]=\"activeSubscription.gateway === 'paypal'\"\r\n                    submitText=\"Change Payment Method\"\r\n            ></create-subscription-panel>\r\n        </div>\r\n\r\n        <div class=\"main-section\" *ngIf=\"canCancel()\">\r\n            <div class=\"main-section-title\" trans>Cancel Subscription</div>\r\n\r\n            <div class=\"main-section-content\">\r\n                <p trans>After cancelling subscription, you will have access to your active plan until your billing period end.</p>\r\n            </div>\r\n\r\n            <div class=\"main-section-actions\">\r\n                <button mat-raised-button color=\"warn\" (click)=\"maybeCancelSubscription()\" trans>Cancel</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <upgrade-page-aside [plan]=\"getPlan()\"></upgrade-page-aside>\r\n\r\n    <loading-indicator class=\"overlay\" [isVisible]=\"loading$ | async\"></loading-indicator>\r\n</div>\r\n\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { finalize, share } from 'rxjs/operators';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { Subscription } from '@common/shared/billing/models/subscription';\r\nimport { Settings } from '@common/core/config/settings.service';\r\nimport { Modal } from '@common/core/ui/dialogs/modal.service';\r\nimport { Subscriptions } from '@common/shared/billing/subscriptions.service';\r\nimport { CurrentUser } from '@common/auth/current-user';\r\nimport { Toast } from '@common/core/ui/toast.service';\r\nimport { Plan } from '@common/core/types/models/Plan';\r\nimport { ConfirmModalComponent } from '@common/core/ui/confirm-modal/confirm-modal.component';\r\nimport { SubscriptionCompletedEvent } from '@common/billing/subscriptions/create-subscription-panel/create-subscription-panel.component';\r\nimport { User } from '@common/core/types/models/User';\r\n\r\n@Component({\r\n    selector: 'user-subscription-page',\r\n    templateUrl: './user-subscription-page.component.html',\r\n    styleUrls: ['./user-subscription-page.component.scss'],\r\n   changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class UserSubscriptionPageComponent implements OnInit {\r\n    public loading$ = new BehaviorSubject<boolean>(false);\r\n    public activeSubscription$ = new BehaviorSubject<Subscription>(null);\r\n\r\n    constructor(\r\n        public settings: Settings,\r\n        private modal: Modal,\r\n        private subscriptions: Subscriptions,\r\n        public currentUser: CurrentUser,\r\n        private toast: Toast,\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.activeSubscription$.next(this.currentUser.getSubscription());\r\n    }\r\n\r\n    public canResume() {\r\n        return this.currentUser.onGracePeriod();\r\n    }\r\n\r\n    public canCancel() {\r\n        return this.currentUser.isSubscribed() && !this.currentUser.onGracePeriod();\r\n    }\r\n\r\n    public canChangePaymentMethod() {\r\n        return this.settings.get('billing.stripe.enable') || this.settings.get('billing.paypal.enable');\r\n    }\r\n\r\n    public getFormattedEndDate(): string {\r\n        if ( ! this.activeSubscription$.value.ends_at) return null;\r\n        return this.activeSubscription$.value.ends_at.split(' ')[0];\r\n    }\r\n\r\n    public getFormattedRenewDate() {\r\n        if ( ! this.activeSubscription$.value.renews_at) return null;\r\n        return this.activeSubscription$.value.renews_at.split(' ')[0];\r\n    }\r\n\r\n    public getPlan(): Plan {\r\n        return this.activeSubscription$.value.plan;\r\n    }\r\n\r\n    /**\r\n     * Ask user to confirm deletion of selected templates\r\n     * and delete selected templates if user confirms.\r\n     */\r\n    public maybeCancelSubscription() {\r\n        this.modal.open(ConfirmModalComponent, {\r\n            title: 'Cancel Subscription',\r\n            body: 'Are you sure you want to cancel your subscription?',\r\n            ok: 'Yes, Cancel',\r\n            cancel: 'Go Back'\r\n        }).afterClosed().subscribe(confirmed => {\r\n            if ( ! confirmed) return;\r\n            this.cancelSubscription().subscribe(() => {\r\n                this.toast.open('Subscription cancelled.');\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Resume cancelled subscription.\r\n     */\r\n    public resumeSubscription() {\r\n        this.loading$.next(true);\r\n        this.subscriptions.resume(this.activeSubscription$.value.id)\r\n            .pipe(finalize(() => this.loading$.next(false)))\r\n            .subscribe(response => {\r\n                this.currentUser.setSubscription(response.subscription);\r\n                this.activeSubscription$.next(this.currentUser.getSubscription());\r\n                this.toast.open('Subscription resumed.');\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Called after user payment method for active subscription has been changed successfully.\r\n     */\r\n    public onPaymentMethodChange(e: SubscriptionCompletedEvent) {\r\n        // if we've only changed customer card information on same\r\n        // payment gateway, show success message and bail\r\n        if (e.status === 'updated') {\r\n            this.toast.open('Payment method updated.');\r\n            return;\r\n        }\r\n\r\n        this.loading$.next(true);\r\n\r\n        // otherwise cancel user's subscription on the other gateway\r\n        this.cancelSubscription({delete: true}).subscribe(() => {\r\n            this.toast.open('Payment method updated.');\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Cancel currently active user subscription.\r\n     */\r\n    private cancelSubscription(params: {delete?: boolean} = {}): Observable<{user: User}> {\r\n        this.loading$.next(true);\r\n\r\n        const request = this.subscriptions.cancel(this.activeSubscription$.value.id, {delete: params.delete})\r\n            .pipe(finalize(() => this.loading$.next(false)))\r\n            .pipe(share());\r\n\r\n        request.subscribe(response => {\r\n            // set new active subscription, if user had more then one\r\n            this.updateUserAndSubscription(response.user);\r\n        });\r\n\r\n        return request;\r\n    }\r\n\r\n    /**\r\n     * Update current user and active subscription.\r\n     */\r\n    private updateUserAndSubscription(user: User) {\r\n        this.currentUser.assignCurrent(user);\r\n        this.activeSubscription$.next(this.currentUser.getSubscription());\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Resolve, RouterStateSnapshot, ActivatedRouteSnapshot} from '@angular/router';\r\nimport {map} from 'rxjs/operators';\r\nimport {ValueLists} from '../../core/services/value-lists.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class CurrenciesListResolver implements Resolve<any> {\r\n    constructor(private valueLists: ValueLists) {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise<any> {\r\n        return this.valueLists.get(['currencies']).pipe(map(response => response.currencies)).toPromise();\r\n    }\r\n}\r\n\r\n","import {Injectable} from '@angular/core';\r\nimport {CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot, CanActivateChild} from '@angular/router';\r\nimport {CurrentUser} from '../../auth/current-user';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class UserSubscribedGuard implements CanActivate, CanActivateChild {\r\n\r\n    constructor(private currentUser: CurrentUser, private router: Router) {}\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        return this.handle();\r\n    }\r\n\r\n    canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        return this.handle();\r\n    }\r\n\r\n    private handle() {\r\n        if (this.currentUser.isSubscribed()) { return true; }\r\n\r\n        this.router.navigate(['/billing/upgrade']);\r\n\r\n        return false;\r\n    }\r\n}","import {Injectable} from '@angular/core';\nimport {AppHttpClient} from '@common/core/http/app-http-client.service';\nimport {BackendResponse} from '@common/core/types/backend-response';\nimport {Invoice} from '@common/billing/invoices/invoice';\n\nconst BASE_URI = 'billing/invoice';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class InvoiceService {\n    constructor(private http: AppHttpClient) {\n    }\n\n    public index(params: {userId?: number} = {}): BackendResponse<{invoices: Invoice[]}> {\n        return this.http.get(`${BASE_URI}`, params);\n    }\n}\n","<material-navbar [menuPosition]=\"settings.get('vebto.navbar.defaultPosition')\"></material-navbar>\n\n<div class=\"container\">\n    <h1 trans>Your Payment History</h1>\n\n    <div class=\"material-panel\">\n        <mat-table [dataSource]=\"dataSource$ | async\" class=\"responsive-material-table\">\n            <ng-container matColumnDef=\"date\">\n                <mat-header-cell *matHeaderCellDef trans>Date</mat-header-cell>\n                <mat-cell *matCellDef=\"let invoice\" data-label=\"Date:\">{{invoice.created_at | formattedDate}}</mat-cell>\n            </ng-container>\n\n            <ng-container matColumnDef=\"amount\">\n                <mat-header-cell *matHeaderCellDef trans>Amount</mat-header-cell>\n                <mat-cell *matCellDef=\"let invoice\" data-label=\"Amount:\">{{invoice.subscription.plan.currency_symbol + invoice.subscription.plan.amount}}</mat-cell>\n            </ng-container>\n\n            <ng-container matColumnDef=\"status\">\n                <mat-header-cell *matHeaderCellDef trans>Status</mat-header-cell>\n                <mat-cell *matCellDef=\"let invoice\" data-label=\"Status:\" trans>{{invoice.paid ? 'Paid' : 'Pending'}}</mat-cell>\n            </ng-container>\n\n            <ng-container matColumnDef=\"invoice\">\n                <mat-header-cell *matHeaderCellDef trans>Invoice</mat-header-cell>\n                <mat-cell *matCellDef=\"let invoice\" data-label=\"Invoice:\">\n                    <a [href]=\"getInvoiceUrl(invoice)\" target=\"_blank\" trans>View</a>\n                </mat-cell>\n            </ng-container>\n\n            <mat-header-row *matHeaderRowDef=\"['date', 'amount', 'status', 'invoice']\"></mat-header-row>\n            <mat-row *matRowDef=\"let myRowData; columns: ['date', 'amount', 'status', 'invoice']\"></mat-row>\n        </mat-table>\n\n        <no-results-message *ngIf=\"!(dataSource$ | async).length && !(loading$ | async)\">\n            <span primary-text trans>Nothing To Display.</span>\n            <span secondary-text trans>You do not have any invoices yet.</span>\n        </no-results-message>\n    </div>\n</div>\n","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\nimport {InvoiceService} from '@common/billing/invoices/invoice.service';\nimport {Invoice} from '@common/billing/invoices/invoice';\nimport {BehaviorSubject} from 'rxjs';\nimport {Settings} from '@common/core/config/settings.service';\nimport {finalize} from 'rxjs/operators';\nimport {CurrentUser} from '@common/auth/current-user';\n\n@Component({\n    selector: 'invoice-index',\n    templateUrl: './invoice-index.component.html',\n    styleUrls: ['./invoice-index.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class InvoiceIndexComponent implements OnInit {\n    public dataSource$ = new BehaviorSubject<Invoice[]>([]);\n    public loading$ = new BehaviorSubject<boolean>(false);\n\n    constructor(\n       private invoices: InvoiceService,\n       public settings: Settings,\n       private currentUser: CurrentUser,\n    ) {}\n\n    ngOnInit() {\n        this.loading$.next(true);\n        this.invoices.index({userId: this.currentUser.get('id')})\n            .pipe(finalize(() => this.loading$.next(false)))\n            .subscribe(response => {\n                this.dataSource$.next(response.invoices);\n            });\n    }\n\n    public getInvoiceUrl(invoice: Invoice) {\n        return this.settings.getBaseUrl(true) + 'secure/billing/invoice/' + invoice.uuid;\n    }\n}\n","import { Component, OnInit, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'pricing-page',\n  templateUrl: './pricing-page.component.html',\n  styleUrls: ['./pricing-page.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PricingPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<upgrade-page mode=\"pricing\"></upgrade-page>","import {Route, RouterModule} from '@angular/router';\r\nimport {UpgradePageComponent} from './upgrade-page/upgrade-page.component';\r\nimport {NgModule} from '@angular/core';\r\nimport {BillingPlansResolver} from './upgrade-page/billing-plans-resolver.service';\r\nimport {UserSubscriptionPageComponent} from './subscriptions/user-subscription-page/user-subscription-page.component';\r\nimport {CurrenciesListResolver} from './upgrade-page/currencies-list-resolver.service';\r\nimport {UserSubscribedGuard} from './guards/user-subscribed-guard.service';\r\nimport {AuthGuard} from '../guards/auth-guard.service';\r\nimport {BillingEnabledGuard} from '../shared/billing/guards/billing-enabled-guard.service';\r\nimport {InvoiceIndexComponent} from '@common/billing/invoices/invoice-index/invoice-index.component';\r\nimport {CheckPermissionsGuard} from '@common/guards/check-permissions-guard.service';\r\nimport {PricingPageComponent} from '@common/billing/pricing-page/pricing-page.component';\r\nimport {RedirectToUpgradePage} from '@common/billing/guards/redirect-to-upgrade-page.service';\r\n\r\nexport const routes: Route[] = [\r\n    {\r\n        path: 'pricing',\r\n        component: PricingPageComponent,\r\n        canActivate: [RedirectToUpgradePage],\r\n        resolve: {\r\n            plans: BillingPlansResolver,\r\n            currencies: CurrenciesListResolver\r\n        }\r\n    },\r\n    {\r\n        path: '',\r\n        canActivate: [AuthGuard, CheckPermissionsGuard],\r\n        canActivateChild: [CheckPermissionsGuard],\r\n        children: [\r\n            {\r\n                path: 'upgrade',\r\n                component: UpgradePageComponent,\r\n                canActivate: [BillingEnabledGuard, AuthGuard],\r\n                resolve: {\r\n                    plans: BillingPlansResolver,\r\n                    currencies: CurrenciesListResolver\r\n                }\r\n            },\r\n            {\r\n                path: 'subscription',\r\n                component: UserSubscriptionPageComponent,\r\n                resolve: { plans: BillingPlansResolver },\r\n                canActivate: [BillingEnabledGuard, AuthGuard, UserSubscribedGuard],\r\n                data: { name: 'subscription' }\r\n            },\r\n            {\r\n                path: 'invoices',\r\n                component: InvoiceIndexComponent,\r\n                canActivate: [BillingEnabledGuard, AuthGuard, UserSubscribedGuard],\r\n            },\r\n        ]\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class BillingRoutingModule {}\r\n","import {Injectable} from '@angular/core';\r\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\r\nimport {CurrentUser} from '../../auth/current-user';\r\nimport {AppearanceListenerService} from '../../shared/appearance/appearance-listener.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class RedirectToUpgradePage implements CanActivate {\r\n    constructor(\r\n        private currentUser: CurrentUser,\r\n        private router: Router,\r\n        private listener: AppearanceListenerService,\r\n    ) {}\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        if (this.listener.active) {\r\n            return true;\r\n        }\r\n        if (this.currentUser.isSubscribed()) {\r\n            this.router.navigate(['billing/subscription']);\r\n            return false;\r\n        } else if (this.currentUser.isLoggedIn()) {\r\n            this.router.navigate(['billing/upgrade']);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n}\r\n","<div class=\"plans\" [class.has-recommended]=\"hasRecommendedPlan\">\r\n    <div class=\"plan\" *ngFor=\"let plan of getAllPlans(); last as last; first as first\" [class.recommended]=\"plan.recommended\" [class.last]=\"last\" [class.first]=\"first\">\r\n        <div class=\"name\">{{plan.name}}</div>\r\n        <div class=\"price-box\" *ngIf=\"!plan.free\">\r\n            <span class=\"number\">{{plan.amount | currency:plan.currency}}</span>\r\n            <span class=\"interval\"> / {{plan.interval | trans}}</span>\r\n        </div>\r\n        <div class=\"price-box\" *ngIf=\"plan.free\" trans>Free</div>\r\n        <plan-features-list [plan]=\"plan\"></plan-features-list>\r\n        <button class=\"select-plan-button\" (click)=\"selectPlan(plan)\" mat-raised-button color=\"accent\" *ngIf=\"plan.recommended\" [disabled]=\"userSubscribedToPlan(plan)\">\r\n            {{ selectPlanButtonText(plan) | trans }}\r\n        </button>\r\n        <button class=\"select-plan-button\" (click)=\"selectPlan(plan)\" mat-stroked-button color=\"accent\" *ngIf=\"!plan.recommended\" [disabled]=\"userSubscribedToPlan(plan)\">\r\n            {{ selectPlanButtonText(plan) | trans }}\r\n        </button>\r\n    </div>\r\n</div>\r\n","import {ChangeDetectionStrategy, Component, EventEmitter, OnInit, Output} from '@angular/core';\r\nimport {SubscriptionStepperState} from '../../subscriptions/subscription-stepper-state.service';\r\nimport {Plan} from '@common/core/types/models/Plan';\r\nimport { CurrentUser } from '@common/auth/current-user';\r\n\r\n@Component({\r\n    selector: 'select-plan-panel',\r\n    templateUrl: './select-plan-panel.component.html',\r\n    styleUrls: ['./select-plan-panel.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class SelectPlanPanelComponent implements OnInit {\r\n    public hasRecommendedPlan = false;\r\n    @Output() selected = new EventEmitter();\r\n\r\n    constructor(\r\n        public state: SubscriptionStepperState,\r\n        public currentUser: CurrentUser,\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.hasRecommendedPlan = this.state.plans.filter(plan => plan.recommended).length > 0;\r\n    }\r\n\r\n    public selectPlan(plan: Plan) {\r\n        this.state.selectInitialPlan(plan);\r\n        // fire event on next render to avoid race conditions\r\n        setTimeout(() => this.selected.emit(plan));\r\n    }\r\n\r\n    public getAllPlans() {\r\n        return this.state.plans.filter(plan => !plan.parent_id && !plan.hidden);\r\n    }\r\n\r\n    public userSubscribedToPlan(plan: Plan): boolean {\r\n        if (this.state.mode !== 'pricing' && plan.free && !this.currentUser.model$?.value?.subscriptions?.length) {\r\n            return true;\r\n        }\r\n        return !!this.currentUser.getSubscription({planId: plan.id});\r\n    }\r\n\r\n    public selectPlanButtonText(plan: Plan) {\r\n        if (this.userSubscribedToPlan(plan)) {\r\n            return 'Your Current Plan';\r\n        } else if (plan.free && this.state.mode === 'pricing') {\r\n            return 'Get Started';\r\n        } else {\r\n            return 'Choose Plan';\r\n        }\r\n    }\r\n}\r\n","<div class=\"subscription-period-step step-container\" *ngIf=\"state.initialPlan$ | async as initialPlan\">\r\n    <div class=\"left-col\">\r\n        <div class=\"title\" trans>Select the duration of your plan. Longer plans offer better discounts!</div>\r\n        <mat-radio-group class=\"periods\" [(ngModel)]=\"state.radioGroupModel\" (change)=\"state.selectPlanById(state.radioGroupModel)\">\r\n            <div class=\"radio-button-wrapper no-label\">\r\n                <mat-radio-button [value]=\"initialPlan.id\" class=\"period\" color=\"accent\">\r\n                    <div class=\"radio-button-content\">\r\n                        <div class=\"name\">1 {{initialPlan.interval | trans}} {{ 'subscription' | trans }}:</div>\r\n                        <div class=\"price\">{{initialPlan.amount | currency:initialPlan.currency}}/{{initialPlan.interval | trans}}</div>\r\n                    </div>\r\n                </mat-radio-button>\r\n            </div>\r\n            <div class=\"radio-button-wrapper\" *ngFor=\"let plan of state.getChildPlans(initialPlan)\">\r\n                <ng-container *ngIf=\"state.selectedPlan$ | async as selectedPlan\">\r\n                    <div class=\"savings-label\">{{'Save' | trans}} {{getPlanSavings(selectedPlan.parent || selectedPlan, plan)}}%</div>\r\n                </ng-container>\r\n                <mat-radio-button [value]=\"plan.id\" class=\"period\" color=\"accent\">\r\n                    <div class=\"radio-button-content\">\r\n                        <div class=\"name\">{{plan.name | trans}}:</div>\r\n                        <div class=\"price\">{{getAmountForSingleInterval(plan) | currency:plan.currency}}/{{(plan.interval || initialPlan.interval) | trans}}</div>\r\n                    </div>\r\n                </mat-radio-button>\r\n            </div>\r\n        </mat-radio-group>\r\n\r\n        <div class=\"actions\">\r\n            <button mat-button matStepperPrevious trans>Back</button>\r\n            <button mat-raised-button color=\"accent\" (click)=\"selected.emit()\">\r\n                {{ (state.mode === 'changePlan' ? 'Change Plan' : 'Select') | trans }}\r\n            </button>\r\n        </div>\r\n    </div>\r\n\r\n    <upgrade-page-aside *ngIf=\"showSidebar\" [plan]=\"state.selectedPlan$ | async\" class=\"right-col\"></upgrade-page-aside>\r\n</div>\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { SubscriptionStepperState } from '../../subscriptions/subscription-stepper-state.service';\r\nimport { Plan } from '@common/core/types/models/Plan';\r\n\r\n@Component({\r\n    selector: 'select-plan-period-panel',\r\n    templateUrl: './select-plan-period-panel.component.html',\r\n    styleUrls: ['./select-plan-period-panel.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class SelectPlanPeriodPanelComponent {\r\n    @Input() showSidebar = false;\r\n    @Output() selected = new EventEmitter();\r\n\r\n    constructor(\r\n        public state: SubscriptionStepperState,\r\n    ) {}\r\n\r\n    public getPlanSavings(base: Plan, parent: Plan): number {\r\n        const baseAmount = this.getAmountPerDay(base);\r\n        const amount = this.getAmountPerDay(parent);\r\n        const savings = (baseAmount - amount) / baseAmount * 100;\r\n        return Math.ceil(savings);\r\n    }\r\n\r\n    private getAmountPerDay(plan: Plan) {\r\n        let days = 1;\r\n        if (plan.interval === 'week') {\r\n            days = 7;\r\n        } else if (plan.interval === 'month') {\r\n            days = 30;\r\n        } else if (plan.interval === 'year') {\r\n            days = 365;\r\n        }\r\n        days = days * plan.interval_count;\r\n        return plan.amount / days;\r\n    }\r\n\r\n    public getAmountForSingleInterval(plan: Plan) {\r\n        return plan.amount / plan.interval_count;\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot, CanActivateChild} from '@angular/router';\r\nimport {CurrentUser} from '../../auth/current-user';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class UserNotSubscribedGuard implements CanActivate, CanActivateChild {\r\n\r\n    constructor(private currentUser: CurrentUser, private router: Router) {}\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        return this.handle();\r\n    }\r\n\r\n    canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        return this.handle();\r\n    }\r\n\r\n    private handle() {\r\n        if ( ! this.currentUser.isSubscribed()) { return true; }\r\n\r\n        this.router.navigate(['/billing/subscription']);\r\n\r\n        return false;\r\n    }\r\n}\r\n","import {ChangeDetectionStrategy, Component} from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'contact-widget',\r\n    templateUrl: './contact-widget.component.html',\r\n    styleUrls: ['./contact-widget.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ContactWidgetComponent {}\r\n","<mat-icon svgIcon=\"question-answer\" class=\"icon\"></mat-icon>\r\n\r\n<div class=\"title\" trans>Do you have any questions about PRO accounts?</div>\r\n<div class=\"subtitle\" trans>Our support team will be happy to assist you.</div>\r\n<a mat-raised-button color=\"accent\" target=\"_blank\" routerLink=\"/contact\" trans>Contact Us</a>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { UpgradePageComponent } from './upgrade-page/upgrade-page.component';\r\nimport { BillingPlansResolver } from './upgrade-page/billing-plans-resolver.service';\r\nimport { BillingRoutingModule } from './billing-routing.module';\r\nimport { PlanFeaturesListComponent } from './upgrade-page/plan-features-list/plan-features-list.component';\r\nimport { OrderSummaryComponent } from './upgrade-page/order-summary/order-summary.component';\r\nimport { AcceptedPaymentsHeaderComponent } from './upgrade-page/accepted-payments-header/accepted-payments-header.component';\r\nimport { UserSubscriptionPageComponent } from './subscriptions/user-subscription-page/user-subscription-page.component';\r\nimport { UpgradePageAsideComponent } from './upgrade-page/upgrade-page-aside/upgrade-page-aside.component';\r\nimport { CurrenciesListResolver } from './upgrade-page/currencies-list-resolver.service';\r\nimport { CreditCardFormComponent } from './credit-card-form/credit-card-form.component';\r\nimport { PaypalSubscriptions } from './subscriptions/paypal-subscriptions';\r\nimport { SelectPlanPanelComponent } from './plans/select-plan-panel/select-plan-panel.component';\r\nimport { SelectPlanPeriodPanelComponent } from './plans/select-plan-period-panel/select-plan-period-panel.component';\r\nimport { SubscriptionStepperState } from './subscriptions/subscription-stepper-state.service';\r\nimport { UserNotSubscribedGuard } from './guards/user-not-subscribed-guard.service';\r\nimport { UserSubscribedGuard } from './guards/user-subscribed-guard.service';\r\nimport { CreateSubscriptionPanelComponent } from './subscriptions/create-subscription-panel/create-subscription-panel.component';\r\nimport { ContactWidgetComponent } from './upgrade-page/contact-widget/contact-widget.component';\r\nimport { FullPlanNameModule } from '../shared/billing/full-plan-name/full-plan-name.module';\r\nimport { InvoiceIndexComponent } from '@common/billing/invoices/invoice-index/invoice-index.component';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { PricingPageComponent } from './pricing-page/pricing-page.component';\r\nimport { MaterialNavbarModule } from '@common/core/ui/material-navbar/material-navbar.module';\r\nimport { TranslationsModule } from '@common/core/translations/translations.module';\r\nimport { FormatPipesModule } from '@common/core/ui/format-pipes/format-pipes.module';\r\nimport { NoResultsMessageModule } from '@common/core/ui/no-results-message/no-results-message.module';\r\nimport { LoadingIndicatorModule } from '@common/core/ui/loading-indicator/loading-indicator.module';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        MaterialNavbarModule,\r\n        BillingRoutingModule,\r\n        FullPlanNameModule,\r\n        TranslationsModule,\r\n        FormatPipesModule,\r\n        NoResultsMessageModule,\r\n        LoadingIndicatorModule,\r\n\r\n        // material\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        MatSnackBarModule,\r\n        MatCheckboxModule,\r\n        MatTooltipModule,\r\n        MatDialogModule,\r\n        MatStepperModule,\r\n        MatProgressBarModule,\r\n        MatTabsModule,\r\n        MatRadioModule,\r\n        MatTableModule,\r\n    ],\r\n    declarations: [\r\n        UpgradePageComponent,\r\n        PlanFeaturesListComponent,\r\n        OrderSummaryComponent,\r\n        AcceptedPaymentsHeaderComponent,\r\n        UserSubscriptionPageComponent,\r\n        UpgradePageAsideComponent,\r\n        CreditCardFormComponent,\r\n        CreateSubscriptionPanelComponent,\r\n        SelectPlanPanelComponent,\r\n        SelectPlanPeriodPanelComponent,\r\n        ContactWidgetComponent,\r\n        InvoiceIndexComponent,\r\n        PricingPageComponent,\r\n    ],\r\n    providers: [\r\n        BillingPlansResolver,\r\n        CurrenciesListResolver,\r\n        PaypalSubscriptions,\r\n        SubscriptionStepperState,\r\n        SubscriptionStepperState,\r\n        UserNotSubscribedGuard,\r\n        UserSubscribedGuard,\r\n    ],\r\n    exports: [\r\n        BillingRoutingModule,\r\n    ]\r\n})\r\nexport class BillingModule {\r\n}\r\n","import { InjectionToken, forwardRef, EventEmitter, Directive, ChangeDetectorRef, Output, Input, ContentChildren, Optional, ElementRef, Inject, ViewChild, Component, ViewEncapsulation, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport { mixinDisableRipple, mixinTabIndex, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/collections';\nimport * as ɵngcc3 from '@angular/material/core';\n\nconst _c0 = [\"input\"];\nconst _c1 = function () { return { enterDuration: 150 }; };\nconst _c2 = [\"*\"];\nconst MAT_RADIO_DEFAULT_OPTIONS = new InjectionToken('mat-radio-default-options', {\n    providedIn: 'root',\n    factory: MAT_RADIO_DEFAULT_OPTIONS_FACTORY\n});\nfunction MAT_RADIO_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        color: 'accent'\n    };\n}\n// Increasing integer for generating unique ids for radio components.\nlet nextUniqueId = 0;\n/**\n * Provider Expression that allows mat-radio-group to register as a ControlValueAccessor. This\n * allows it to support [(ngModel)] and ngControl.\n * @docs-private\n */\nconst MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatRadioGroup),\n    multi: true\n};\n/** Change event object emitted by MatRadio and MatRadioGroup. */\nclass MatRadioChange {\n    constructor(\n    /** The MatRadioButton that emits the change event. */\n    source, \n    /** The value of the MatRadioButton. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n/**\n * Base class with all of the `MatRadioGroup` functionality.\n * @docs-private\n */\nclass _MatRadioGroupBase {\n    constructor(_changeDetector) {\n        this._changeDetector = _changeDetector;\n        /** Selected value for the radio group. */\n        this._value = null;\n        /** The HTML name attribute applied to radio buttons in this group. */\n        this._name = `mat-radio-group-${nextUniqueId++}`;\n        /** The currently selected radio button. Should match value. */\n        this._selected = null;\n        /** Whether the `value` has been set to its initial value. */\n        this._isInitialized = false;\n        /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n        this._labelPosition = 'after';\n        /** Whether the radio group is disabled. */\n        this._disabled = false;\n        /** Whether the radio group is required. */\n        this._required = false;\n        /** The method to be called in order to update ngModel */\n        this._controlValueAccessorChangeFn = () => { };\n        /**\n         * onTouch function registered via registerOnTouch (ControlValueAccessor).\n         * @docs-private\n         */\n        this.onTouched = () => { };\n        /**\n         * Event emitted when the group value changes.\n         * Change events are only emitted when the value changes due to user interaction with\n         * a radio button (the same behavior as `<input type-\"radio\">`).\n         */\n        this.change = new EventEmitter();\n    }\n    /** Name of the radio button group. All radio buttons inside this group will use this name. */\n    get name() { return this._name; }\n    set name(value) {\n        this._name = value;\n        this._updateRadioButtonNames();\n    }\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    get labelPosition() {\n        return this._labelPosition;\n    }\n    set labelPosition(v) {\n        this._labelPosition = v === 'before' ? 'before' : 'after';\n        this._markRadiosForCheck();\n    }\n    /**\n     * Value for the radio-group. Should equal the value of the selected radio button if there is\n     * a corresponding radio button with a matching value. If there is not such a corresponding\n     * radio button, this value persists to be applied in case a new radio button is added with a\n     * matching value.\n     */\n    get value() { return this._value; }\n    set value(newValue) {\n        if (this._value !== newValue) {\n            // Set this before proceeding to ensure no circular loop occurs with selection.\n            this._value = newValue;\n            this._updateSelectedRadioFromValue();\n            this._checkSelectedRadioButton();\n        }\n    }\n    _checkSelectedRadioButton() {\n        if (this._selected && !this._selected.checked) {\n            this._selected.checked = true;\n        }\n    }\n    /**\n     * The currently selected radio button. If set to a new radio button, the radio group value\n     * will be updated to match the new selected button.\n     */\n    get selected() { return this._selected; }\n    set selected(selected) {\n        this._selected = selected;\n        this.value = selected ? selected.value : null;\n        this._checkSelectedRadioButton();\n    }\n    /** Whether the radio group is disabled */\n    get disabled() { return this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._markRadiosForCheck();\n    }\n    /** Whether the radio group is required */\n    get required() { return this._required; }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this._markRadiosForCheck();\n    }\n    /**\n     * Initialize properties once content children are available.\n     * This allows us to propagate relevant attributes to associated buttons.\n     */\n    ngAfterContentInit() {\n        // Mark this component as initialized in AfterContentInit because the initial value can\n        // possibly be set by NgModel on MatRadioGroup, and it is possible that the OnInit of the\n        // NgModel occurs *after* the OnInit of the MatRadioGroup.\n        this._isInitialized = true;\n    }\n    /**\n     * Mark this group as being \"touched\" (for ngModel). Meant to be called by the contained\n     * radio buttons upon their blur.\n     */\n    _touch() {\n        if (this.onTouched) {\n            this.onTouched();\n        }\n    }\n    _updateRadioButtonNames() {\n        if (this._radios) {\n            this._radios.forEach(radio => {\n                radio.name = this.name;\n                radio._markForCheck();\n            });\n        }\n    }\n    /** Updates the `selected` radio button from the internal _value state. */\n    _updateSelectedRadioFromValue() {\n        // If the value already matches the selected radio, do nothing.\n        const isAlreadySelected = this._selected !== null && this._selected.value === this._value;\n        if (this._radios && !isAlreadySelected) {\n            this._selected = null;\n            this._radios.forEach(radio => {\n                radio.checked = this.value === radio.value;\n                if (radio.checked) {\n                    this._selected = radio;\n                }\n            });\n        }\n    }\n    /** Dispatch change event with current selection and group value. */\n    _emitChangeEvent() {\n        if (this._isInitialized) {\n            this.change.emit(new MatRadioChange(this._selected, this._value));\n        }\n    }\n    _markRadiosForCheck() {\n        if (this._radios) {\n            this._radios.forEach(radio => radio._markForCheck());\n        }\n    }\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param value\n     */\n    writeValue(value) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    }\n    /**\n     * Registers a callback to be triggered when the model value changes.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    /**\n     * Registers a callback to be triggered when the control is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n     * @param isDisabled Whether the control should be disabled.\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetector.markForCheck();\n    }\n}\n_MatRadioGroupBase.ɵfac = function _MatRadioGroupBase_Factory(t) { return new (t || _MatRadioGroupBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\n_MatRadioGroupBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatRadioGroupBase, inputs: { name: \"name\", labelPosition: \"labelPosition\", value: \"value\", selected: \"selected\", disabled: \"disabled\", required: \"required\", color: \"color\" }, outputs: { change: \"change\" } });\n_MatRadioGroupBase.ctorParameters = () => [\n    { type: ChangeDetectorRef }\n];\n_MatRadioGroupBase.propDecorators = {\n    change: [{ type: Output }],\n    color: [{ type: Input }],\n    name: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    value: [{ type: Input }],\n    selected: [{ type: Input }],\n    disabled: [{ type: Input }],\n    required: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatRadioGroupBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }]; }, { change: [{\n            type: Output\n        }], name: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }] }); })();\n/**\n * A group of radio buttons. May contain one or more `<mat-radio-button>` elements.\n */\nclass MatRadioGroup extends _MatRadioGroupBase {\n}\nMatRadioGroup.ɵfac = function MatRadioGroup_Factory(t) { return ɵMatRadioGroup_BaseFactory(t || MatRadioGroup); };\nMatRadioGroup.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatRadioGroup, selectors: [[\"mat-radio-group\"]], contentQueries: function MatRadioGroup_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatRadioButton, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._radios = _t);\n    } }, hostAttrs: [\"role\", \"radiogroup\", 1, \"mat-radio-group\"], exportAs: [\"matRadioGroup\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatRadioGroup.propDecorators = {\n    _radios: [{ type: ContentChildren, args: [forwardRef(() => MatRadioButton), { descendants: true },] }]\n};\nconst ɵMatRadioGroup_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatRadioGroup);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRadioGroup, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-radio-group',\n                exportAs: 'matRadioGroup',\n                providers: [MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR],\n                host: {\n                    'role': 'radiogroup',\n                    'class': 'mat-radio-group'\n                }\n            }]\n    }], null, { _radios: [{\n            type: ContentChildren,\n            args: [forwardRef(() => MatRadioButton), { descendants: true }]\n        }] }); })();\n// Boilerplate for applying mixins to MatRadioButton.\n/** @docs-private */\nclass MatRadioButtonBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\n// As per Material design specifications the selection control radio should use the accent color\n// palette by default. https://material.io/guidelines/components/selection-controls.html\nconst _MatRadioButtonMixinBase = mixinDisableRipple(mixinTabIndex(MatRadioButtonBase));\n/**\n * Base class with all of the `MatRadioButton` functionality.\n * @docs-private\n */\nclass _MatRadioButtonBase extends _MatRadioButtonMixinBase {\n    constructor(radioGroup, elementRef, _changeDetector, _focusMonitor, _radioDispatcher, _animationMode, _providerOverride) {\n        super(elementRef);\n        this._changeDetector = _changeDetector;\n        this._focusMonitor = _focusMonitor;\n        this._radioDispatcher = _radioDispatcher;\n        this._animationMode = _animationMode;\n        this._providerOverride = _providerOverride;\n        this._uniqueId = `mat-radio-${++nextUniqueId}`;\n        /** The unique ID for the radio button. */\n        this.id = this._uniqueId;\n        /**\n         * Event emitted when the checked state of this radio button changes.\n         * Change events are only emitted when the value changes due to user interaction with\n         * the radio button (the same behavior as `<input type-\"radio\">`).\n         */\n        this.change = new EventEmitter();\n        /** Whether this radio is checked. */\n        this._checked = false;\n        /** Value assigned to this radio. */\n        this._value = null;\n        /** Unregister function for _radioDispatcher */\n        this._removeUniqueSelectionListener = () => { };\n        // Assertions. Ideally these should be stripped out by the compiler.\n        // TODO(jelbourn): Assert that there's no name binding AND a parent radio group.\n        this.radioGroup = radioGroup;\n        this._removeUniqueSelectionListener =\n            _radioDispatcher.listen((id, name) => {\n                if (id !== this.id && name === this.name) {\n                    this.checked = false;\n                }\n            });\n    }\n    /** Whether this radio button is checked. */\n    get checked() { return this._checked; }\n    set checked(value) {\n        const newCheckedState = coerceBooleanProperty(value);\n        if (this._checked !== newCheckedState) {\n            this._checked = newCheckedState;\n            if (newCheckedState && this.radioGroup && this.radioGroup.value !== this.value) {\n                this.radioGroup.selected = this;\n            }\n            else if (!newCheckedState && this.radioGroup && this.radioGroup.value === this.value) {\n                // When unchecking the selected radio button, update the selected radio\n                // property on the group.\n                this.radioGroup.selected = null;\n            }\n            if (newCheckedState) {\n                // Notify all radio buttons with the same name to un-check.\n                this._radioDispatcher.notify(this.id, this.name);\n            }\n            this._changeDetector.markForCheck();\n        }\n    }\n    /** The value of this radio button. */\n    get value() { return this._value; }\n    set value(value) {\n        if (this._value !== value) {\n            this._value = value;\n            if (this.radioGroup !== null) {\n                if (!this.checked) {\n                    // Update checked when the value changed to match the radio group's value\n                    this.checked = this.radioGroup.value === value;\n                }\n                if (this.checked) {\n                    this.radioGroup.selected = this;\n                }\n            }\n        }\n    }\n    /** Whether the label should appear after or before the radio button. Defaults to 'after' */\n    get labelPosition() {\n        return this._labelPosition || (this.radioGroup && this.radioGroup.labelPosition) || 'after';\n    }\n    set labelPosition(value) {\n        this._labelPosition = value;\n    }\n    /** Whether the radio button is disabled. */\n    get disabled() {\n        return this._disabled || (this.radioGroup !== null && this.radioGroup.disabled);\n    }\n    set disabled(value) {\n        this._setDisabled(coerceBooleanProperty(value));\n    }\n    /** Whether the radio button is required. */\n    get required() {\n        return this._required || (this.radioGroup && this.radioGroup.required);\n    }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n    }\n    /** Theme color of the radio button. */\n    get color() {\n        return this._color ||\n            (this.radioGroup && this.radioGroup.color) ||\n            this._providerOverride && this._providerOverride.color || 'accent';\n    }\n    set color(newValue) { this._color = newValue; }\n    /** ID of the native input element inside `<mat-radio-button>` */\n    get inputId() { return `${this.id || this._uniqueId}-input`; }\n    /** Focuses the radio button. */\n    focus(options) {\n        this._focusMonitor.focusVia(this._inputElement, 'keyboard', options);\n    }\n    /**\n     * Marks the radio button as needing checking for change detection.\n     * This method is exposed because the parent radio group will directly\n     * update bound properties of the radio button.\n     */\n    _markForCheck() {\n        // When group value changes, the button will not be notified. Use `markForCheck` to explicit\n        // update radio button's status\n        this._changeDetector.markForCheck();\n    }\n    ngOnInit() {\n        if (this.radioGroup) {\n            // If the radio is inside a radio group, determine if it should be checked\n            this.checked = this.radioGroup.value === this._value;\n            // Copy name from parent radio group\n            this.name = this.radioGroup.name;\n        }\n    }\n    ngAfterViewInit() {\n        this._focusMonitor\n            .monitor(this._elementRef, true)\n            .subscribe(focusOrigin => {\n            if (!focusOrigin && this.radioGroup) {\n                this.radioGroup._touch();\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._removeUniqueSelectionListener();\n    }\n    /** Dispatch change event with current value. */\n    _emitChangeEvent() {\n        this.change.emit(new MatRadioChange(this, this._value));\n    }\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    _onInputClick(event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `radio-button` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n    /**\n     * Triggered when the radio button received a click or the input recognized any change.\n     * Clicking on a label element, will trigger a change event on the associated input.\n     */\n    _onInputChange(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n        const groupValueChanged = this.radioGroup && this.value !== this.radioGroup.value;\n        this.checked = true;\n        this._emitChangeEvent();\n        if (this.radioGroup) {\n            this.radioGroup._controlValueAccessorChangeFn(this.value);\n            if (groupValueChanged) {\n                this.radioGroup._emitChangeEvent();\n            }\n        }\n    }\n    /** Sets the disabled state and marks for check if a change occurred. */\n    _setDisabled(value) {\n        if (this._disabled !== value) {\n            this._disabled = value;\n            this._changeDetector.markForCheck();\n        }\n    }\n}\n_MatRadioButtonBase.ɵfac = function _MatRadioButtonBase_Factory(t) { return new (t || _MatRadioButtonBase)(ɵngcc0.ɵɵdirectiveInject(_MatRadioGroupBase, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.UniqueSelectionDispatcher), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_RADIO_DEFAULT_OPTIONS, 8)); };\n_MatRadioButtonBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatRadioButtonBase, viewQuery: function _MatRadioButtonBase_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputElement = _t.first);\n    } }, inputs: { id: \"id\", checked: \"checked\", value: \"value\", labelPosition: \"labelPosition\", disabled: \"disabled\", required: \"required\", color: \"color\", name: \"name\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"] }, outputs: { change: \"change\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatRadioButtonBase.ctorParameters = () => [\n    { type: _MatRadioGroupBase, decorators: [{ type: Optional }] },\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: FocusMonitor },\n    { type: UniqueSelectionDispatcher },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RADIO_DEFAULT_OPTIONS,] }] }\n];\n_MatRadioButtonBase.propDecorators = {\n    id: [{ type: Input }],\n    name: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    ariaDescribedby: [{ type: Input, args: ['aria-describedby',] }],\n    checked: [{ type: Input }],\n    value: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    disabled: [{ type: Input }],\n    required: [{ type: Input }],\n    color: [{ type: Input }],\n    change: [{ type: Output }],\n    _inputElement: [{ type: ViewChild, args: ['input',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatRadioButtonBase, [{\n        type: Directive\n    }], function () { return [{ type: _MatRadioGroupBase, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc2.UniqueSelectionDispatcher }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RADIO_DEFAULT_OPTIONS]\n            }] }]; }, { id: [{\n            type: Input\n        }], change: [{\n            type: Output\n        }], checked: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }], name: [{\n            type: Input\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], ariaDescribedby: [{\n            type: Input,\n            args: ['aria-describedby']\n        }], _inputElement: [{\n            type: ViewChild,\n            args: ['input']\n        }] }); })();\n/**\n * A Material design radio-button. Typically placed inside of `<mat-radio-group>` elements.\n */\nclass MatRadioButton extends _MatRadioButtonBase {\n    constructor(radioGroup, elementRef, changeDetector, focusMonitor, radioDispatcher, animationMode, providerOverride) {\n        super(radioGroup, elementRef, changeDetector, focusMonitor, radioDispatcher, animationMode, providerOverride);\n    }\n}\nMatRadioButton.ɵfac = function MatRadioButton_Factory(t) { return new (t || MatRadioButton)(ɵngcc0.ɵɵdirectiveInject(MatRadioGroup, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.UniqueSelectionDispatcher), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_RADIO_DEFAULT_OPTIONS, 8)); };\nMatRadioButton.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatRadioButton, selectors: [[\"mat-radio-button\"]], hostAttrs: [1, \"mat-radio-button\"], hostVars: 17, hostBindings: function MatRadioButton_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatRadioButton_focus_HostBindingHandler() { return ctx._inputElement.nativeElement.focus(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"tabindex\", 0 - 1)(\"id\", ctx.id)(\"aria-label\", null)(\"aria-labelledby\", null)(\"aria-describedby\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-radio-checked\", ctx.checked)(\"mat-radio-disabled\", ctx.disabled)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mat-primary\", ctx.color === \"primary\")(\"mat-accent\", ctx.color === \"accent\")(\"mat-warn\", ctx.color === \"warn\");\n    } }, inputs: { disableRipple: \"disableRipple\", tabIndex: \"tabIndex\" }, exportAs: [\"matRadioButton\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c2, decls: 13, vars: 19, consts: [[1, \"mat-radio-label\"], [\"label\", \"\"], [1, \"mat-radio-container\"], [1, \"mat-radio-outer-circle\"], [1, \"mat-radio-inner-circle\"], [\"type\", \"radio\", 1, \"mat-radio-input\", \"cdk-visually-hidden\", 3, \"id\", \"checked\", \"disabled\", \"tabIndex\", \"required\", \"change\", \"click\"], [\"input\", \"\"], [\"mat-ripple\", \"\", 1, \"mat-radio-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\"], [1, \"mat-ripple-element\", \"mat-radio-persistent-ripple\"], [1, \"mat-radio-label-content\"], [2, \"display\", \"none\"]], template: function MatRadioButton_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵelement(3, \"div\", 3);\n        ɵngcc0.ɵɵelement(4, \"div\", 4);\n        ɵngcc0.ɵɵelementStart(5, \"input\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"change\", function MatRadioButton_Template_input_change_5_listener($event) { return ctx._onInputChange($event); })(\"click\", function MatRadioButton_Template_input_click_5_listener($event) { return ctx._onInputClick($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵelement(8, \"div\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(9, \"div\", 9);\n        ɵngcc0.ɵɵelementStart(10, \"span\", 10);\n        ɵngcc0.ɵɵtext(11, \"\\u00A0\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(12);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        ɵngcc0.ɵɵattribute(\"for\", ctx.inputId);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.inputId)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled)(\"tabIndex\", ctx.tabIndex)(\"required\", ctx.required);\n        ɵngcc0.ɵɵattribute(\"name\", ctx.name)(\"value\", ctx.value)(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledby)(\"aria-describedby\", ctx.ariaDescribedby);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", _r0)(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleCentered\", true)(\"matRippleRadius\", 20)(\"matRippleAnimation\", ɵngcc0.ɵɵpureFunction0(18, _c1));\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-radio-label-before\", ctx.labelPosition == \"before\");\n    } }, directives: [ɵngcc3.MatRipple], styles: [\".mat-radio-button{display:inline-block;-webkit-tap-highlight-color:transparent;outline:0}.mat-radio-label{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;display:inline-flex;align-items:center;white-space:nowrap;vertical-align:middle;width:100%}.mat-radio-container{box-sizing:border-box;display:inline-block;position:relative;width:20px;height:20px;flex-shrink:0}.mat-radio-outer-circle{box-sizing:border-box;height:20px;left:0;position:absolute;top:0;transition:border-color ease 280ms;width:20px;border-width:2px;border-style:solid;border-radius:50%}._mat-animation-noopable .mat-radio-outer-circle{transition:none}.mat-radio-inner-circle{border-radius:50%;box-sizing:border-box;height:20px;left:0;position:absolute;top:0;transition:transform ease 280ms,background-color ease 280ms;width:20px;transform:scale(0.001)}._mat-animation-noopable .mat-radio-inner-circle{transition:none}.mat-radio-checked .mat-radio-inner-circle{transform:scale(0.5)}.cdk-high-contrast-active .mat-radio-checked .mat-radio-inner-circle{border:solid 10px}.mat-radio-label-content{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto;display:inline-block;order:0;line-height:inherit;padding-left:8px;padding-right:0}[dir=rtl] .mat-radio-label-content{padding-right:8px;padding-left:0}.mat-radio-label-content.mat-radio-label-before{order:-1;padding-left:0;padding-right:8px}[dir=rtl] .mat-radio-label-content.mat-radio-label-before{padding-right:0;padding-left:8px}.mat-radio-disabled,.mat-radio-disabled .mat-radio-label{cursor:default}.mat-radio-button .mat-radio-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-radio-button .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple){opacity:.16}.mat-radio-persistent-ripple{width:100%;height:100%;transform:none}.mat-radio-container:hover .mat-radio-persistent-ripple{opacity:.04}.mat-radio-button:not(.mat-radio-disabled).cdk-keyboard-focused .mat-radio-persistent-ripple,.mat-radio-button:not(.mat-radio-disabled).cdk-program-focused .mat-radio-persistent-ripple{opacity:.12}.mat-radio-persistent-ripple,.mat-radio-disabled .mat-radio-container:hover .mat-radio-persistent-ripple{opacity:0}@media(hover: none){.mat-radio-container:hover .mat-radio-persistent-ripple{display:none}}.mat-radio-input{bottom:0;left:50%}.cdk-high-contrast-active .mat-radio-disabled{opacity:.5}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatRadioButton.ctorParameters = () => [\n    { type: MatRadioGroup, decorators: [{ type: Optional }] },\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: FocusMonitor },\n    { type: UniqueSelectionDispatcher },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RADIO_DEFAULT_OPTIONS,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRadioButton, [{\n        type: Component,\n        args: [{\n                selector: 'mat-radio-button',\n                template: \"<!-- TODO(jelbourn): render the radio on either side of the content -->\\n<!-- TODO(mtlin): Evaluate trade-offs of using native radio vs. cost of additional bindings. -->\\n<label [attr.for]=\\\"inputId\\\" class=\\\"mat-radio-label\\\" #label>\\n  <!-- The actual 'radio' part of the control. -->\\n  <div class=\\\"mat-radio-container\\\">\\n    <div class=\\\"mat-radio-outer-circle\\\"></div>\\n    <div class=\\\"mat-radio-inner-circle\\\"></div>\\n    <input #input class=\\\"mat-radio-input cdk-visually-hidden\\\" type=\\\"radio\\\"\\n        [id]=\\\"inputId\\\"\\n        [checked]=\\\"checked\\\"\\n        [disabled]=\\\"disabled\\\"\\n        [tabIndex]=\\\"tabIndex\\\"\\n        [attr.name]=\\\"name\\\"\\n        [attr.value]=\\\"value\\\"\\n        [required]=\\\"required\\\"\\n        [attr.aria-label]=\\\"ariaLabel\\\"\\n        [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n        [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n        (change)=\\\"_onInputChange($event)\\\"\\n        (click)=\\\"_onInputClick($event)\\\">\\n\\n    <!-- The ripple comes after the input so that we can target it with a CSS\\n         sibling selector when the input is focused. -->\\n    <div mat-ripple class=\\\"mat-radio-ripple mat-focus-indicator\\\"\\n         [matRippleTrigger]=\\\"label\\\"\\n         [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n         [matRippleCentered]=\\\"true\\\"\\n         [matRippleRadius]=\\\"20\\\"\\n         [matRippleAnimation]=\\\"{enterDuration: 150}\\\">\\n\\n      <div class=\\\"mat-ripple-element mat-radio-persistent-ripple\\\"></div>\\n    </div>\\n  </div>\\n\\n  <!-- The label content for radio control. -->\\n  <div class=\\\"mat-radio-label-content\\\" [class.mat-radio-label-before]=\\\"labelPosition == 'before'\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </div>\\n</label>\\n\",\n                inputs: ['disableRipple', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matRadioButton',\n                host: {\n                    'class': 'mat-radio-button',\n                    '[class.mat-radio-checked]': 'checked',\n                    '[class.mat-radio-disabled]': 'disabled',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    '[class.mat-primary]': 'color === \"primary\"',\n                    '[class.mat-accent]': 'color === \"accent\"',\n                    '[class.mat-warn]': 'color === \"warn\"',\n                    // Needs to be -1 so the `focus` event still fires.\n                    '[attr.tabindex]': '-1',\n                    '[attr.id]': 'id',\n                    '[attr.aria-label]': 'null',\n                    '[attr.aria-labelledby]': 'null',\n                    '[attr.aria-describedby]': 'null',\n                    // Note: under normal conditions focus shouldn't land on this element, however it may be\n                    // programmatically set, for example inside of a focus trap, in this case we want to forward\n                    // the focus to the native element.\n                    '(focus)': '_inputElement.nativeElement.focus()'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-radio-button{display:inline-block;-webkit-tap-highlight-color:transparent;outline:0}.mat-radio-label{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;display:inline-flex;align-items:center;white-space:nowrap;vertical-align:middle;width:100%}.mat-radio-container{box-sizing:border-box;display:inline-block;position:relative;width:20px;height:20px;flex-shrink:0}.mat-radio-outer-circle{box-sizing:border-box;height:20px;left:0;position:absolute;top:0;transition:border-color ease 280ms;width:20px;border-width:2px;border-style:solid;border-radius:50%}._mat-animation-noopable .mat-radio-outer-circle{transition:none}.mat-radio-inner-circle{border-radius:50%;box-sizing:border-box;height:20px;left:0;position:absolute;top:0;transition:transform ease 280ms,background-color ease 280ms;width:20px;transform:scale(0.001)}._mat-animation-noopable .mat-radio-inner-circle{transition:none}.mat-radio-checked .mat-radio-inner-circle{transform:scale(0.5)}.cdk-high-contrast-active .mat-radio-checked .mat-radio-inner-circle{border:solid 10px}.mat-radio-label-content{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto;display:inline-block;order:0;line-height:inherit;padding-left:8px;padding-right:0}[dir=rtl] .mat-radio-label-content{padding-right:8px;padding-left:0}.mat-radio-label-content.mat-radio-label-before{order:-1;padding-left:0;padding-right:8px}[dir=rtl] .mat-radio-label-content.mat-radio-label-before{padding-right:0;padding-left:8px}.mat-radio-disabled,.mat-radio-disabled .mat-radio-label{cursor:default}.mat-radio-button .mat-radio-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-radio-button .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple){opacity:.16}.mat-radio-persistent-ripple{width:100%;height:100%;transform:none}.mat-radio-container:hover .mat-radio-persistent-ripple{opacity:.04}.mat-radio-button:not(.mat-radio-disabled).cdk-keyboard-focused .mat-radio-persistent-ripple,.mat-radio-button:not(.mat-radio-disabled).cdk-program-focused .mat-radio-persistent-ripple{opacity:.12}.mat-radio-persistent-ripple,.mat-radio-disabled .mat-radio-container:hover .mat-radio-persistent-ripple{opacity:0}@media(hover: none){.mat-radio-container:hover .mat-radio-persistent-ripple{display:none}}.mat-radio-input{bottom:0;left:50%}.cdk-high-contrast-active .mat-radio-disabled{opacity:.5}\\n\"]\n            }]\n    }], function () { return [{ type: MatRadioGroup, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc2.UniqueSelectionDispatcher }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RADIO_DEFAULT_OPTIONS]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatRadioModule {\n}\nMatRadioModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatRadioModule });\nMatRadioModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatRadioModule_Factory(t) { return new (t || MatRadioModule)(); }, imports: [[MatRippleModule, MatCommonModule], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatRadioModule, { declarations: function () { return [MatRadioGroup, MatRadioButton]; }, imports: function () { return [MatRippleModule, MatCommonModule]; }, exports: function () { return [MatRadioGroup, MatRadioButton, MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRadioModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatRippleModule, MatCommonModule],\n                exports: [MatRadioGroup, MatRadioButton, MatCommonModule],\n                declarations: [MatRadioGroup, MatRadioButton]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_RADIO_DEFAULT_OPTIONS, MAT_RADIO_DEFAULT_OPTIONS_FACTORY, MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR, MatRadioButton, MatRadioChange, MatRadioGroup, MatRadioModule, _MatRadioButtonBase, _MatRadioGroupBase };\n\n//# sourceMappingURL=radio.js.map","import { Injectable } from '@angular/core';\r\nimport { AppHttpClient } from '../../core/http/app-http-client.service';\r\nimport { PaginatedBackendResponse } from '../../core/types/pagination/paginated-backend-response';\r\nimport { BackendResponse } from '@common/core/types/backend-response';\r\nimport { Plan } from '@common/core/types/models/Plan';\r\nimport { PaginationParams } from '@common/core/types/pagination/pagination-params';\r\n\r\nexport const PLANS_BASE_URI = 'billing-plan';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class Plans {\r\n    constructor(private http: AppHttpClient) {}\r\n\r\n    public all(params?: PaginationParams): PaginatedBackendResponse<Plan> {\r\n        return this.http.get(PLANS_BASE_URI, params);\r\n    }\r\n\r\n    public get(id: number): BackendResponse<{plan: Plan}> {\r\n        return this.http.get(`${PLANS_BASE_URI}/${id}`);\r\n    }\r\n\r\n    public create(params: object): BackendResponse<{plan: Plan}> {\r\n        return this.http.post(PLANS_BASE_URI, params);\r\n    }\r\n\r\n    public update(id: number, params: object): BackendResponse<{plan: Plan}> {\r\n        return this.http.put(`${PLANS_BASE_URI}/${id}`, params);\r\n    }\r\n\r\n    public delete(params: {ids: number[]}): BackendResponse<void> {\r\n        return this.http.delete(`${PLANS_BASE_URI}/${params.ids}`);\r\n    }\r\n\r\n    public sync(): BackendResponse<void> {\r\n        return this.http.post(`${PLANS_BASE_URI}/sync`);\r\n    }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {FullPlanNameComponent} from './full-plan-name.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        FullPlanNameComponent,\r\n    ],\r\n    exports: [\r\n        FullPlanNameComponent,\r\n    ]\r\n})\r\nexport class FullPlanNameModule {}\r\n","import {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {AppHttpClient} from '../../core/http/app-http-client.service';\r\nimport {PaginationResponse} from '../../core/types/pagination/pagination-response';\r\nimport {User} from '../../core/types/models/User';\r\nimport {Subscription} from '@common/shared/billing/models/subscription';\r\nimport {Plan} from '@common/core/types/models/Plan';\r\nimport {BackendResponse} from '@common/core/types/backend-response';\r\n\r\nexport interface CreateSubOnStripeResponse {\r\n    status: 'complete'|'requires_action';\r\n    user?: User;\r\n    payment_intent_secret: string|undefined;\r\n    reference: string;\r\n    end_date: string;\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class Subscriptions {\r\n\r\n    /**\r\n     * Subscriptions constructor.\r\n     */\r\n    constructor(private http: AppHttpClient) {}\r\n\r\n    /**\r\n     * Get all available subscriptions.\r\n     */\r\n    public all(params?: object): Observable<PaginationResponse<Subscription>> {\r\n        return this.http.get('billing/subscriptions', params);\r\n    }\r\n\r\n    /**\r\n     * Get subscription matching specified id.\r\n     */\r\n    public get(id: number): Observable<{subscription: Subscription}> {\r\n        return this.http.get('billing/subscriptions/' + id);\r\n    }\r\n\r\n    /**\r\n     * Create a new subscription on stripe.\r\n     */\r\n    public createOnStripe(params: {plan_id: number, start_date?: string}): Observable<CreateSubOnStripeResponse> {\r\n        return this.http.post('billing/subscriptions/stripe', params);\r\n    }\r\n\r\n    /**\r\n     * Update subscription matching specified id.\r\n     */\r\n    public update(id: number, params: object): Observable<{subscription: Subscription}> {\r\n        return this.http.put('billing/subscriptions/' + id, params);\r\n    }\r\n\r\n    /**\r\n     * Create a new subscription.\r\n     */\r\n    public create(params: object): Observable<{subscription: Subscription}> {\r\n        return this.http.post('billing/subscriptions', params);\r\n    }\r\n\r\n    /**\r\n     * Cancel subscription matching specified id.\r\n     */\r\n    public cancel(id: number, params: {delete: boolean}): Observable<{user: User}> {\r\n        return this.http.delete('billing/subscriptions/' + id, params);\r\n    }\r\n\r\n    public resume(id: number): Observable<{subscription: Subscription}> {\r\n        return this.http.post('billing/subscriptions/' + id + '/resume');\r\n    }\r\n\r\n    public changePlan(id: number, plan: Plan): Observable<{user: User}|{links: {approve: string}}> {\r\n        return this.http.post('billing/subscriptions/' + id + '/change-plan', {newPlanId: plan.id});\r\n    }\r\n\r\n    public addCard(token: string): Observable<{user: User}> {\r\n        return this.http.post('billing/stripe/cards/add', {token});\r\n    }\r\n\r\n    public finalizeOnStripe(reference: string, userId: number): BackendResponse<CreateSubOnStripeResponse> {\r\n        return this.http.post('billing/subscriptions/stripe/finalize', {reference, userId});\r\n    }\r\n}\r\n"]}